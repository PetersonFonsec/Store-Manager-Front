{
    "pipes": [
        {
            "name": "ErrorMessagePipe",
            "id": "pipe-ErrorMessagePipe-3e226f5d8f93203f0cdd46134a632947c722661b1b4c6453346e6890d3798bc3e4a7f07295dbee0adf2ec79ec06bda45c2490c3feb7011e694fc33866674e1bb",
            "file": "src/app/shared/pipes/error-message/error-message.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "errorsObject",
                            "type": "ValidationErrors | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "errorsObject",
                            "type": "ValidationErrors | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "errorMessage",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\n@Pipe({\n  name: 'errorMessage',\n})\nexport class ErrorMessagePipe implements PipeTransform {\n  transform(errorsObject: ValidationErrors | null | undefined): string {\n    const allPossibleErrors: ValidationErrors = {\n      required: 'Campo obrigatÃ³rio',\n      email: 'Email invalido',\n    };\n\n    if (!errorsObject) return '';\n    const error = Object.keys(errorsObject)[0] ?? '';\n    return allPossibleErrors[error] ?? 'Campo invalido';\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "IAuthResponse",
            "id": "interface-IAuthResponse-141f18d1b612ebc3c35823bb1a915350f00535fadb53ea0a59d38bdc4fa8384bb7ed9e3be740cf536f3ed3ec200a5939387fa8f6cafa949a17356f9edc8266a5",
            "file": "src/app/shared/services/auth/auth.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ResponseError } from '../../interfaces/response-error';\n\nexport interface IAuthResponse extends ResponseError {\n  name: string;\n  email: string;\n  access_token: string;\n}\n\nexport interface ILoginParam {\n  email: string;\n  password: string;\n}\n\nexport interface ISignupParam {\n  name: string;\n  email: string;\n  password: string;\n  confirm_password: string;\n}\n",
            "properties": [
                {
                    "name": "access_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "ResponseError"
        },
        {
            "name": "ILoginParam",
            "id": "interface-ILoginParam-141f18d1b612ebc3c35823bb1a915350f00535fadb53ea0a59d38bdc4fa8384bb7ed9e3be740cf536f3ed3ec200a5939387fa8f6cafa949a17356f9edc8266a5",
            "file": "src/app/shared/services/auth/auth.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ResponseError } from '../../interfaces/response-error';\n\nexport interface IAuthResponse extends ResponseError {\n  name: string;\n  email: string;\n  access_token: string;\n}\n\nexport interface ILoginParam {\n  email: string;\n  password: string;\n}\n\nexport interface ISignupParam {\n  name: string;\n  email: string;\n  password: string;\n  confirm_password: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "InputPhotoValue",
            "id": "interface-InputPhotoValue-6ffde909ff67bbc5780a10efe010c0b51ac5878576636a947b9818d41b2ef0e739e95cf273948b9558d7e086f35c82cbdf85120b419b9168c4535229f40b44ed",
            "file": "src/app/shared/components/inputs/input-photo/input-photo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport interface InputPhotoValue {\n  b64: string;\n  file: any;\n}\n\n@Component({\n  selector: 'app-input-photo',\n  templateUrl: './input-photo.component.html',\n  styleUrls: ['./input-photo.component.scss'],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputPhotoComponent),\n    },\n  ],\n})\nexport class InputPhotoComponent implements OnInit, ControlValueAccessor {\n  @Input() id = '';\n  iconUpload = faCloudUploadAlt;\n  val: InputPhotoValue = {\n    b64: '',\n    file: '',\n  };\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n\n  onTouched: any = () => {};\n\n  get value() {\n    return this.val;\n  }\n\n  set value(val) {\n    if (val !== undefined && val !== null) {\n      this.val = val;\n      this.onChange(val);\n      this.onTouched(val);\n    }\n  }\n\n  onBlur() {}\n\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  showImage(event: any): void {\n    const files: FileList = event.target.files;\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      this.value = {\n        b64: reader.result as string,\n        file: files[0],\n      };\n    };\n\n    reader.readAsDataURL(files[0]);\n  }\n}\n",
            "properties": [
                {
                    "name": "b64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IProduct",
            "id": "interface-IProduct-d1ddcaf790ebc86b52696dd89513bc98d369aba440beb8c93311281cdceccf65ea71d05d9458870a243ee56c5d3b5f78d42e4dfec8a147c023a6983fb21c2ff0",
            "file": "src/app/signin/pages/products/interfaces/products.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InputPhotoValue } from 'src/app/shared/components/inputs/input-photo/input-photo.component';\n\nexport interface IProduct {\n  _id: string;\n  createdAt: string;\n  description: string;\n  name: string;\n  updatedAt: string;\n  photo: string;\n  price_buy: number;\n  price_sale: number;\n}\nexport interface IProductCreate {\n  description: string;\n  name: string;\n  photo: InputPhotoValue;\n  price_buy: number;\n  price_sale: number;\n}\n",
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "photo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "price_buy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "price_sale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "updatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IProductCreate",
            "id": "interface-IProductCreate-d1ddcaf790ebc86b52696dd89513bc98d369aba440beb8c93311281cdceccf65ea71d05d9458870a243ee56c5d3b5f78d42e4dfec8a147c023a6983fb21c2ff0",
            "file": "src/app/signin/pages/products/interfaces/products.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InputPhotoValue } from 'src/app/shared/components/inputs/input-photo/input-photo.component';\n\nexport interface IProduct {\n  _id: string;\n  createdAt: string;\n  description: string;\n  name: string;\n  updatedAt: string;\n  photo: string;\n  price_buy: number;\n  price_sale: number;\n}\nexport interface IProductCreate {\n  description: string;\n  name: string;\n  photo: InputPhotoValue;\n  price_buy: number;\n  price_sale: number;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "photo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputPhotoValue",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "price_buy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "price_sale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IProvider",
            "id": "interface-IProvider-8b077c72653ad577d83f7485d984dde0e9a370c45e1289cf72b7e31696e998de2c20c45bb64cae3ffa6407cd32dc949ebd21a512fe7f465bc09e7e89ff91944d",
            "file": "src/app/signin/pages/provides/interfaces/provider.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IProvider {\n  _id: string;\n  celphone: string;\n  email: string;\n  name: string;\n  photo: string;\n  representative: string;\n}\n",
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "celphone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "photo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "representative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IProvidesCreate",
            "id": "interface-IProvidesCreate-195941749e5cc0233e7018e884383c58eae57e42f602c3c13d04fa93c3ceafd0ee1f730028c6e506ded30e35c3a5ab7c0085d956604743948dec43a44e2df994",
            "file": "src/app/signin/pages/provides/components/form-provides/form-provides.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nexport interface IProvidesCreate {\n  representative: string;\n  celphone: string;\n  email: string;\n  photo: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-form-provides',\n  templateUrl: './form-provides.component.html',\n  styleUrls: ['./form-provides.component.scss'],\n})\nexport class FormProvidesComponent implements OnInit {\n  @Input() loading = false;\n  @Output() submit = new EventEmitter<IProvidesCreate>();\n  form!: FormGroup;\n  closeIcon = faTimes;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      representative: [null, Validators.required],\n      celphone: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      photo: [null],\n      name: [null, Validators.required],\n    });\n  }\n\n  _submit(): void {\n    const form = this.form.getRawValue();\n    this.submit.emit(form);\n  }\n}\n",
            "properties": [
                {
                    "name": "celphone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "photo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "representative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ISignupParam",
            "id": "interface-ISignupParam-141f18d1b612ebc3c35823bb1a915350f00535fadb53ea0a59d38bdc4fa8384bb7ed9e3be740cf536f3ed3ec200a5939387fa8f6cafa949a17356f9edc8266a5",
            "file": "src/app/shared/services/auth/auth.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ResponseError } from '../../interfaces/response-error';\n\nexport interface IAuthResponse extends ResponseError {\n  name: string;\n  email: string;\n  access_token: string;\n}\n\nexport interface ILoginParam {\n  email: string;\n  password: string;\n}\n\nexport interface ISignupParam {\n  name: string;\n  email: string;\n  password: string;\n  confirm_password: string;\n}\n",
            "properties": [
                {
                    "name": "confirm_password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PageLink",
            "id": "interface-PageLink-c31386379326006511a88f68bb6c6f19663820d5ec4d9cbeb90055b677a37b78e01afb1b1eee7b44932f47840efa715610818cec9fbbc7b6bd3952031f4a7884",
            "file": "src/app/data/pages.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  faChartBar,\n  faBoxOpen,\n  faPeopleCarry,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport interface PageLink {\n  link: string;\n  content: string;\n  icon: any;\n}\n\nexport const pages: PageLink[] = [\n  {\n    link: 'dashboard',\n    content: 'Dashboard',\n    icon: faChartBar,\n  },\n  {\n    link: 'produtos',\n    content: 'Products',\n    icon: faBoxOpen,\n  },\n  {\n    link: 'fornecedores',\n    content: 'Providers',\n    icon: faPeopleCarry,\n  },\n  {\n    link: 'vendas',\n    content: 'Sales',\n    icon: faPeopleCarry,\n  },\n];\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponseError",
            "id": "interface-ResponseError-6763e2e448b3272d0e966e26c820982fa95df9c75b07d5becb01c73ba6121487bf91cb8ed9bc71312bb057fd550811630808097e7b02694161b6994c80a7e865",
            "file": "src/app/shared/interfaces/response-error.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ResponseError {\n  statusCode: number;\n  message: string;\n  error: string;\n}\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "statusCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-89e9d5c50472879cfc782fb1a9f4db9a912681abb0df6ea1ee69da5c0115b69f0bc96a712b07c4abb0a4eaf1cb17d357e83bf309d898ba8b73c7980df54b1085",
            "file": "src/app/shared/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "urlApi",
                    "defaultValue": "`${environment.urlApi}auth`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "user",
                            "type": "ILoginParam",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IAuthResponse>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "ILoginParam",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "refresh",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setToken",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signup",
                    "args": [
                        {
                            "name": "user",
                            "type": "ISignupParam",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<IAuthResponse>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "ISignupParam",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IAuthResponse, ILoginParam, ISignupParam } from './auth.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  readonly urlApi = `${environment.urlApi}auth`;\n\n  constructor(private httpClient: HttpClient, private router: Router) {}\n\n  set token(token: string) {\n    localStorage.setItem(environment.token, token);\n  }\n\n  get token(): string {\n    return localStorage.getItem(environment.token) ?? '';\n  }\n\n  private setToken<T>(response: any): T {\n    this.token = response?.access_token;\n    return response;\n  }\n\n  login(user: ILoginParam): Observable<IAuthResponse> {\n    return this.httpClient\n      .post<IAuthResponse>(`${this.urlApi}/login`, user)\n      .pipe(map((response) => this.setToken<IAuthResponse>(response)));\n  }\n\n  signup(user: ISignupParam): Observable<IAuthResponse> {\n    return this.httpClient\n      .post(`${this.urlApi}/signup`, user)\n      .pipe(map((response) => this.setToken<IAuthResponse>(response)));\n  }\n\n  async logout(): Promise<void> {\n    localStorage.removeItem(environment.token);\n    await this.router.navigateByUrl('/signup');\n  }\n\n  refresh(): Observable<any> {\n    return this.httpClient.get(`${this.urlApi}/refresh`);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "token": {
                    "name": "token",
                    "setSignature": {
                        "name": "token",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "token",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "token",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "token",
                        "type": "string",
                        "returnType": "string",
                        "line": 20
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "BaseService",
            "id": "injectable-BaseService-95f122e6aaa60b0ccf6f511268565a2cb1b95ae92485be30bec1b915932419bca4d37810c7c2ea85e060aae3c44d8c14fe39f2d79f7477059887e0b707fffa09",
            "file": "src/app/shared/services/base/base.service.ts",
            "properties": [
                {
                    "name": "urlApi",
                    "defaultValue": "environment.urlApi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TCreate>",
                    "typeParameters": [
                        "TCreate",
                        "TParams"
                    ],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TDelete>",
                    "typeParameters": [
                        "TDelete",
                        "TParams"
                    ],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TGetAll>",
                    "typeParameters": [
                        "TGetAll"
                    ],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TGetOne>",
                    "typeParameters": [
                        "TGetOne"
                    ],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TUpdate>",
                    "typeParameters": [
                        "TUpdate",
                        "TParams"
                    ],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BaseService {\n  private urlApi = environment.urlApi;\n\n  constructor(\n    @Inject('domain') private domain: string,\n    private httpClient: HttpClient,\n  ) {\n    this.urlApi += domain;\n  }\n\n  getOne<TGetOne>(id: string): Observable<TGetOne> {\n    return this.httpClient.get<TGetOne>(`${this.urlApi}/${id}`);\n  }\n\n  getAll<TGetAll>(): Observable<TGetAll> {\n    return this.httpClient.get<TGetAll>(this.urlApi);\n  }\n\n  create<TCreate, TParams>(params: TParams): Observable<TCreate> {\n    return this.httpClient.post<TCreate>(this.urlApi, params);\n  }\n\n  update<TUpdate, TParams>(id: string, params: TParams): Observable<TUpdate> {\n    return this.httpClient.post<TUpdate>(`${this.urlApi}/${id}`, params);\n  }\n\n  delete<TDelete, TParams>(id: string, params: TParams): Observable<TDelete> {\n    return this.httpClient.delete<TDelete>(`${this.urlApi}/${id}`, params);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "domain",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "domain",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductService",
            "id": "injectable-ProductService-9acac342786ac49df3b1ea04614ac146fc9a649d9606fcc3f83992867274be825d53b706d970f0d30f0bb8da1e6eef8556641e9ccc2966b1ccd909166d93dd02",
            "file": "src/app/signin/pages/products/services/product/product.service.ts",
            "properties": [
                {
                    "name": "urlApi",
                    "defaultValue": "environment.urlApi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TCreate>",
                    "typeParameters": [
                        "TCreate",
                        "TParams"
                    ],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TDelete>",
                    "typeParameters": [
                        "TDelete",
                        "TParams"
                    ],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TGetAll>",
                    "typeParameters": [
                        "TGetAll"
                    ],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "getOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TGetOne>",
                    "typeParameters": [
                        "TGetOne"
                    ],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TUpdate>",
                    "typeParameters": [
                        "TUpdate",
                        "TParams"
                    ],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseService } from 'src/app/shared/services/base/base.service';\n\n@Injectable()\nexport class ProductService extends BaseService {\n  constructor(private http: HttpClient) {\n    super('products', http);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseService",
            "type": "injectable"
        },
        {
            "name": "ProviderService",
            "id": "injectable-ProviderService-a8719f327ac6197da58db4c16b6cdcf34020a479e3feb1b0e331ea4af3ac66020501496117cc2c6369349228935104036eded56404c15a059be6704fa53cb376",
            "file": "src/app/signin/pages/provides/services/providers/provider.service.ts",
            "properties": [
                {
                    "name": "urlApi",
                    "defaultValue": "environment.urlApi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TCreate>",
                    "typeParameters": [
                        "TCreate",
                        "TParams"
                    ],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TDelete>",
                    "typeParameters": [
                        "TDelete",
                        "TParams"
                    ],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<TGetAll>",
                    "typeParameters": [
                        "TGetAll"
                    ],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "getOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TGetOne>",
                    "typeParameters": [
                        "TGetOne"
                    ],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<TUpdate>",
                    "typeParameters": [
                        "TUpdate",
                        "TParams"
                    ],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "TParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseService } from 'src/app/shared/services/base/base.service';\n\n@Injectable()\nexport class ProviderService extends BaseService {\n  constructor(private http: HttpClient) {\n    super('providers', http);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseService",
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "LoggedGuard",
            "id": "injectable-LoggedGuard-0a548efc4c98af32f3abe5215ea82cc51965dce60d21857bbc9fa687416b5fb1ed98b08f6d4a94d4612c293d6295ce21074d2f821840387bf0c8a8f13367b03e",
            "file": "src/app/shared/guards/logged.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggedGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate(): Promise<boolean> {\n    const token = this.authService.token;\n    if (!token) await this.router.navigateByUrl('/signup');\n    return true;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "ErrorInterceptor",
            "id": "injectable-ErrorInterceptor-1d72c5e3a2b0bc6d95e8dd580b5bf0f080ced246466d02a0986880fb6c23161b3c8c8ec0d97801614e2b42c97400c9182f29880d03d8f9aad5e53f09dddc0a4d",
            "file": "src/app/shared/interceptors/error/error.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { catchError, Observable } from 'rxjs';\n\n/**\n * @description Get the error object to response\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      catchError((res) => {\n        throw res.error;\n      }),\n    );\n  }\n}\n",
            "type": "interceptor"
        },
        {
            "name": "TokenInterceptor",
            "id": "injectable-TokenInterceptor-91145004c793b7016cd8191e18f3afea977f55f04b4568171c43be649d04bd00a2a636043afe4ce702b265169e541f456a0f178057a79224750fb907ddfbaf78",
            "file": "src/app/shared/interceptors/token/token.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * @description Add jwt token in request header\n   */\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    const token = this.authService.token;\n\n    if (token) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n        },\n      });\n    }\n\n    return next.handle(req);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-ad9b9ffabb049ef82670c1959d1e44143560e9f89d57ed89e644f94ac00eb51e3f9886cf575acbf7d09b6a6a78b0d5106951eb779d33ef532d13f69867c9c2bb",
            "file": "src/app/shared/components/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-alert",
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'Error'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"Error\" | \"Success\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n})\nexport class AlertComponent {\n  @Input() type: 'Error' | 'Success' = 'Error';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".alert {\n  border-radius: 6px;\n  display: block;\n  color: var(--white);\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 16px;\n  text-align: center;\n  width: 100%;\n\n  &.Error {\n    background-color: var(--red);\n  }\n\n  &.Success {\n    background-color: var(--green);\n  }\n}\n",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"alert {{ type }}\" role=\"alert\">\n  <ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-dee7ec6dc472c1db30f14f853b0842fb2da352e183037f63c0b288f7523045b8ce3603760ce39eed6f73ad699ac4d73c6d717bc0da509eb9af0f4e7bbeb2621f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "environment.app_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = environment.app_name;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AsideComponent",
            "id": "component-AsideComponent-45760dd0deb9d6c826ef11dfe3993f7da7f4f0a1c03a07169992253b324da8aa24964d7562a32d4aa982f0be2e849029a99dfd102436deca28800db3a31d9484",
            "file": "src/app/shared/components/aside/aside.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-aside",
            "styleUrls": [
                "./aside.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./aside.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "exitIcon",
                    "defaultValue": "faDoorOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "links",
                    "defaultValue": "pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PageLink[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { PageLink, pages } from 'src/app/data/pages';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-aside',\n  templateUrl: './aside.component.html',\n  styleUrls: ['./aside.component.scss'],\n})\nexport class AsideComponent {\n  links: PageLink[] = pages;\n  exitIcon = faDoorOpen;\n\n  constructor(private authService: AuthService) {}\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".aside {\n  background-color: var(--background);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  @media (max-width: 768px) {\n    position: absolute;\n    text-align: center;\n    transition: var(--transition);\n    transform: translateX(-100%);\n\n    &.show {\n      transform: translateX(0);\n    }\n  }\n\n  &_header {\n    padding: 38px 32px;\n\n    img {\n      max-height: 100%;\n      max-width: 100%;\n    }\n  }\n\n  &_list {\n    .link,\n    a {\n      color: var(--background-very-light);\n      display: flex;\n      font-size: 16px;\n      letter-spacing: 0.2px;\n      line-height: 20px;\n      padding: 22px 32px;\n      width: 100%;\n\n      fa-icon {\n        margin-right: 24px;\n      }\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n\n    a.active {\n      background-color: rgba(159, 162, 180, 0.2);\n      border-left: 3px solid var(--background-very-light);\n    }\n  }\n}\n",
                    "styleUrl": "./aside.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<aside class=\"aside\">\n  <header class=\"aside_header\">\n    <img src=\"/assets/logo-large.png\" alt=\"logo\" />\n  </header>\n\n  <nav class=\"aside_list\">\n    <ul>\n      <li *ngFor=\"let link of links\">\n        <a [routerLink]=\"link.link\" routerLinkActive=\"active\">\n          <fa-icon [icon]=\"link.icon\"></fa-icon>\n\n          {{ link.content }}\n        </a>\n      </li>\n\n      <li>\n        <button class=\"link\" (click)=\"logout()\">\n          <fa-icon [icon]=\"exitIcon\"></fa-icon>\n          Sair\n        </button>\n      </li>\n    </ul>\n  </nav>\n</aside>\n"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-bd9c6631fae584eac989ab35dde60a586c4251e74905efd9374cb2700bf7892f38cc2a8736904f741e94a2493d24e727308cbcf451686727fa6dd7bdfac341fd",
            "file": "src/app/shared/components/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "avatar",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss'],\n})\nexport class AvatarComponent {\n  @Input() avatar = '';\n  @Input() name = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "img {\n  border-radius: 100%;\n  display: block;\n}\n",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<img width=\"44\" height=\"44\" [src]=\"avatar\" [alt]=\"name\" />\n"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-aeb6d8e0faf5fc6ef0b15712002fb4eddc0d90118b5856860e62ddd5362417f52ac90f9a9916f42c8f1448d1e256f07a741fe5c314843c251b753bcb271ea8da",
            "file": "src/app/shared/components/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'green'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"red\" | \"green\" | \"yellow\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-badge',\n  templateUrl: './badge.component.html',\n  styleUrls: ['./badge.component.scss'],\n})\nexport class BadgeComponent implements OnInit {\n  @Input() color: 'red' | 'green' | 'yellow' = 'green';\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".badge {\n  align-items: center;\n  color: var(--white);\n  border-radius: 100px;\n  display: flex;\n  font-size: 11px;\n  font-weight: bold;\n  letter-spacing: 0.5px;\n  line-height: 14px;\n  padding: 6px 12px;\n  text-align: center;\n  text-transform: uppercase;\n\n  &.green {\n    background-color: var(--green);\n  }\n\n  &.yellow {\n    background-color: var(--yellow);\n  }\n\n  &.red {\n    background-color: var(--red);\n  }\n}\n",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"badge {{ color }}\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-7238ce3a3d8571c8b8c836fe52aa3f86ba8318993d7c2675ee84ecacc6c06eb46986afd42f8bf52f800761dc9a1e47a806ab3918833f9555f2bdb735f55bb6c5-1",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'blue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"blue\" | \"red\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n  @Input() disabled = false;\n  @Input() loading = false;\n  @Input() color: 'blue' | 'red' = 'blue';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n  border-radius: 8px;\n  box-shadow: 0px 4px 12px rgba(55, 81, 255, 0.24);\n  color: var(--white);\n  font-size: 14px;\n  font-weight: 600;\n  letter-spacing: 0.2px;\n  line-height: 20px;\n  opacity: 1;\n  padding: 16px 24px;\n  text-align: center;\n  transition: var(--transition);\n  width: 100%;\n\n  //colors\n  &.blue {\n    background: var(--primary);\n  }\n\n  &.red {\n    background: var(--red);\n  }\n\n  //states\n  &:hover {\n    filter: brightness(1.1);\n  }\n\n  &:disabled {\n    opacity: 0.4;\n  }\n\n  &.loading {\n    position: relative;\n    font-size: 0;\n    pointer-events: none;\n\n    &::after {\n      content: '';\n      animation: spinner linear infinite 1s;\n      margin: auto;\n      height: 24px;\n      border: 4px solid var(--white);\n      border-radius: 100%;\n      border-right-color: transparent;\n      position: absolute;\n      transform: translate(-50%, -50%);\n      width: 24px;\n      left: 0;\n      top: 0;\n      right: 0;\n      bottom: 0;\n    }\n  }\n}\n\n@keyframes spinner {\n  from {\n    transform: rotate(0);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button\n  class=\"button {{ color }}\"\n  [ngClass]=\"{ loading }\"\n  [disabled]=\"disabled\"\n>\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "ContainerComponent",
            "id": "component-ContainerComponent-6c549e73d9b702a0be7947adbe42791d34b144262a0720749506319f64512d649deae38e8709ac75bbc10c32b82cbc8e3e57a50b836166d23b96ccc95cfc0156",
            "file": "src/app/shared/components/container/container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-container",
            "styleUrls": [
                "./container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n})\nexport class ContainerComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  align-items: center;\n  background: var(--white);\n  border: 1px solid #dfe0eb;\n  border-radius: 8px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 100%;\n  padding: 24px 32px;\n  width: 100%;\n}\n",
                    "styleUrl": "./container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-951c5ee7a8acf63591cb129c25b5a52a0e72de98d604d1f616b0f57db2d84945bd828e5747aa274c727b132e6c22d672e6e6e3668b9f3816d65c770f5786b265",
            "file": "src/app/signin/pages/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { scrollToTop } from 'src/app/shared/utils/scroll-to-top';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  constructor(private title: Title) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(`${environment.app_name} | Dashboard`);\n    scrollToTop();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dashboard {\n  display: grid;\n  flex: 1;\n  grid-gap: 24px;\n  grid-template-columns: repeat(2, 1fr);\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  .collumn-medium {\n    grid-column: span 2;\n  }\n\n  .card {\n    color: var(--gray-dark);\n    font-size: 19px;\n    font-weight: bold;\n    letter-spacing: 0.4px;\n    line-height: 24px;\n    text-align: center;\n\n    &_title {\n      color: #252733;\n      font-size: 19px;\n      font-weight: bold;\n      line-height: 24px;\n      letter-spacing: 0.4px;\n    }\n\n    strong {\n      color: var(--text);\n      display: block;\n      font-size: 40px;\n      letter-spacing: 1px;\n      line-height: 50px;\n      margin-top: 12px;\n    }\n\n    &.no-padding ::ng-deep .container {\n      padding: 0;\n    }\n\n    ul {\n      width: 100%;\n      padding: 24px 0;\n    }\n\n    li {\n      padding: 24px 32px;\n    }\n  }\n}\n",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"dashboard\">\n  <div class=\"card\">\n    <app-container>\n      Produtos Cadastrados\n      <strong> 108</strong>\n    </app-container>\n  </div>\n\n  <div class=\"card\">\n    <app-container>\n      Fornecedores Cadastrados\n      <strong> 108</strong>\n    </app-container>\n  </div>\n\n  <div class=\"card collumn-medium\">\n    <app-container>\n      Vendas no ultimo mÃªs\n      <strong> 108</strong>\n    </app-container>\n  </div>\n\n  <div class=\"collumn-medium\">\n    <app-list title=\"Produtos mais vendidos no ultimo mÃªs\">\n      <a header-aside routerLink=\"../vendas\"> Ver todas as vendas </a>\n      <app-list-item>\n        Produto\n        <span aside>Quantidade vendida</span>\n      </app-list-item>\n\n      <app-list-item>Bala babalu <span aside>100</span></app-list-item>\n      <app-list-item>Bala juquinha <span aside>100</span></app-list-item>\n      <app-list-item>Bala de coraÃ§Ã£o <span aside>100</span></app-list-item>\n    </app-list>\n  </div>\n\n  <div class=\"collumn-medium\">\n    <app-list title=\"Produtos menos vendidos no ultimo mÃªs\">\n      <a header-aside routerLink=\"../vendas\"> Ver todas as vendas </a>\n      <app-list-item>\n        Produto\n        <span aside>Quantidade vendida</span>\n      </app-list-item>\n\n      <app-list-item>Bala coco <span aside>0</span></app-list-item>\n      <app-list-item>Bala de veio(canela) <span aside>0</span></app-list-item>\n      <app-list-item>Bala 7belo <span aside>0</span></app-list-item>\n    </app-list>\n  </div>\n</div>\n"
        },
        {
            "name": "ErrorMessageComponent",
            "id": "component-ErrorMessageComponent-2d7510be672cce95cb28097cd6a3e27c4309203961390aa2bfb0806db160bf51e2a81cb59f9ab52647a301e9ef4945df4f0a82abb7b7d42a3b8876fba9e5e026",
            "file": "src/app/shared/components/error-message/error-message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-message",
            "styleUrls": [
                "./error-message.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "AbstractControl | null | undefined",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "NgModel | null | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { AbstractControl, NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.scss'],\n})\nexport class ErrorMessageComponent {\n  @Input() control: AbstractControl | null | undefined;\n  @Input() model: NgModel | null | undefined;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".error {\n  color: var(--red);\n  display: block;\n  font-size: 14px;\n  font-weight: 600;\n  padding: 4px 0;\n  text-align: left;\n}\n",
                    "styleUrl": "./error-message.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"error\" *ngIf=\"model?.invalid && model?.touched\" role=\"alert\">\n  {{ model?.errors | errorMessage }}\n</span>\n<span class=\"error\" *ngIf=\"control?.invalid && control?.touched\" role=\"alert\">\n  {{ control?.errors | errorMessage }}\n</span>\n"
        },
        {
            "name": "FormLoginComponent",
            "id": "component-FormLoginComponent-4e4214a786b0f50df22c1b30c62e069abe777d188551df6db7c4a6c2e9f80bfdb5ca1240ec5c5fa66f8e3f4e01cede39abd872254733cdd26a6eb6f0b0de1b7a",
            "file": "src/app/signup/pages/login/components/form-login/form-login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-login",
            "styleUrls": [
                "./form-login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "user",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\n@Component({\n  selector: 'app-form-login',\n  templateUrl: './form-login.component.html',\n  styleUrls: ['./form-login.component.scss'],\n})\nexport class FormLoginComponent implements OnDestroy {\n  subscription!: Subscription;\n  errorMessage = '';\n  loading = false;\n  user: any = {};\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  submit(): void {\n    this.errorMessage = '';\n    this.loading = true;\n\n    this.subscription = this.authService.login(this.user).subscribe({\n      next: async () => await this.router.navigateByUrl('/'),\n      error: ({ message }) => {\n        this.errorMessage = message;\n        this.loading = false;\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input {\n  display: block;\n  margin-bottom: 24px;\n  width: 100%;\n}\n\napp-alert {\n  display: block;\n  margin: 16px 0;\n}\n",
                    "styleUrl": "./form-login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<form autocomplete=\"off\" novalidate=\"false\" (submit)=\"submit()\" #form=\"ngForm\">\n  <div class=\"input\">\n    <app-input-text\n      name=\"email\"\n      [(ngModel)]=\"user.email\"\n      [error]=\"!!email.invalid && !!email.touched\"\n      #email=\"ngModel\"\n      type=\"email\"\n      label=\"Email\"\n      placeholder=\"Email address\"\n      id=\"email\"\n      email\n      required\n    ></app-input-text>\n    <app-error-message [model]=\"email\"> </app-error-message>\n  </div>\n\n  <div class=\"input\">\n    <app-input-password\n      name=\"password\"\n      [(ngModel)]=\"user.password\"\n      #password=\"ngModel\"\n      type=\"password\"\n      label=\"Password\"\n      placeholder=\"Password\"\n      [error]=\"!!password.invalid && !!password.touched\"\n      id=\"password\"\n      required\n    ></app-input-password>\n    <app-error-message [model]=\"password\"> </app-error-message>\n  </div>\n\n  <app-button [loading]=\"loading\" [disabled]=\"!!form.invalid\" type=\"submit\">\n    Login\n  </app-button>\n</form>\n\n<app-alert *ngIf=\"errorMessage\">\n  {{ errorMessage }}\n</app-alert>\n"
        },
        {
            "name": "FormProductComponent",
            "id": "component-FormProductComponent-cb632f3fb2270832901917e9d29a3d7508b74c3a624ad309c2ebbfd4536e30b6a2720d94316c1072a6f83e5feb4bd3df03721971acb28c506762c81ceb0212d3",
            "file": "src/app/signin/pages/products/components/form-product/form-product.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-product",
            "styleUrls": [
                "./form-product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-product.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<IProductCreate>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "iconClose",
                    "defaultValue": "faTimes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "_submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { IProductCreate } from '../../interfaces/products';\n\n@Component({\n  selector: 'app-form-product',\n  templateUrl: './form-product.component.html',\n  styleUrls: ['./form-product.component.scss'],\n})\nexport class FormProductComponent implements OnInit {\n  @Output() submit = new EventEmitter<IProductCreate>();\n  @Input() loading = false;\n  iconClose = faTimes;\n  form!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      description: [null, Validators.required],\n      price_sale: [null, Validators.required],\n      price_buy: [null, Validators.required],\n      photo: [null],\n      name: [null, Validators.required],\n    });\n  }\n\n  _submit(): void {\n    const form = this.form.getRawValue();\n    this.submit.emit(form);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "form {\n  width: 400px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 100%;\n  position: relative;\n}\n\n.title {\n  color: var(--text);\n  font-size: 20px;\n  margin: 0 0 24px 0;\n  text-align: center;\n}\n\n.input {\n  display: block;\n  margin-bottom: 24px;\n  max-width: 100%;\n  width: 100%;\n\n  &.center {\n    margin: 0 auto;\n    width: max-content;\n  }\n\n  &.half {\n    max-width: calc(50% - 12px);\n  }\n}\n\napp-button {\n  width: 100%;\n}\n\n.closeButton {\n  align-items: center;\n  background-color: var(--background);\n  border-radius: 100%;\n  color: var(--white);\n  display: flex;\n  font-size: 12px;\n  height: 24px;\n  justify-content: center;\n  position: absolute;\n  right: -24px;\n  padding: 0;\n  transform: translate(50%, -50%);\n  top: -24px;\n  width: 24px;\n}\n",
                    "styleUrl": "./form-product.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"form\" (submit)=\"_submit()\">\n  <h3 class=\"title\">FormulÃ¡rio para criar um novo produto</h3>\n\n  <div class=\"input center\">\n    <app-input-photo formControlName=\"photo\"></app-input-photo>\n  </div>\n\n  <div class=\"input\">\n    <app-input-text\n      label=\"nome\"\n      placeholder=\"Nome do produto\"\n      formControlName=\"name\"\n      [error]=\"!!form.get('name')?.touched && !!form.get('name')?.invalid\"\n    ></app-input-text>\n    <app-error-message [control]=\"form.get('name')\"> </app-error-message>\n  </div>\n\n  <div class=\"input\">\n    <app-input-text\n      label=\"descriÃ§Ã£o\"\n      placeholder=\"DescriÃ§Ã£o do produto\"\n      formControlName=\"description\"\n      [error]=\"\n        !!form.get('description')?.touched && !!form.get('description')?.invalid\n      \"\n    ></app-input-text>\n    <app-error-message [control]=\"form.get('description')\"> </app-error-message>\n  </div>\n\n  <div class=\"input half\">\n    <app-input-currency\n      label=\"preÃ§o de compra\"\n      placeholder=\"R$ 0,00\"\n      formControlName=\"price_buy\"\n      [error]=\"\n        !!form.get('price_buy')?.touched && !!form.get('price_buy')?.invalid\n      \"\n    ></app-input-currency>\n    <app-error-message [control]=\"form.get('price_buy')\"> </app-error-message>\n  </div>\n\n  <div class=\"input half\">\n    <app-input-currency\n      label=\"preÃ§o de venda\"\n      placeholder=\"R$ 0,00\"\n      formControlName=\"price_sale\"\n      [error]=\"\n        !!form.get('price_sale')?.touched && !!form.get('price_sale')?.invalid\n      \"\n    ></app-input-currency>\n    <app-error-message [control]=\"form.get('price_sale')\"> </app-error-message>\n  </div>\n\n  <app-button\n    [loading]=\"loading\"\n    [disabled]=\"form.invalid\"\n    type=\"submit\"\n    color=\"red\"\n  >\n    Criar produto\n  </app-button>\n\n  <button mat-dialog-close class=\"closeButton\" type=\"button\">\n    <fa-icon [icon]=\"iconClose\"></fa-icon>\n  </button>\n</form>\n"
        },
        {
            "name": "FormProvidesComponent",
            "id": "component-FormProvidesComponent-195941749e5cc0233e7018e884383c58eae57e42f602c3c13d04fa93c3ceafd0ee1f730028c6e506ded30e35c3a5ab7c0085d956604743948dec43a44e2df994",
            "file": "src/app/signin/pages/provides/components/form-provides/form-provides.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-provides",
            "styleUrls": [
                "./form-provides.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-provides.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<IProvidesCreate>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "closeIcon",
                    "defaultValue": "faTimes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "_submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nexport interface IProvidesCreate {\n  representative: string;\n  celphone: string;\n  email: string;\n  photo: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-form-provides',\n  templateUrl: './form-provides.component.html',\n  styleUrls: ['./form-provides.component.scss'],\n})\nexport class FormProvidesComponent implements OnInit {\n  @Input() loading = false;\n  @Output() submit = new EventEmitter<IProvidesCreate>();\n  form!: FormGroup;\n  closeIcon = faTimes;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      representative: [null, Validators.required],\n      celphone: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      photo: [null],\n      name: [null, Validators.required],\n    });\n  }\n\n  _submit(): void {\n    const form = this.form.getRawValue();\n    this.submit.emit(form);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "form {\n  width: 400px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 100%;\n  position: relative;\n}\n\n.title {\n  color: var(--text);\n  font-size: 20px;\n  margin: 0 0 24px 0;\n  text-align: center;\n}\n\n.input {\n  display: block;\n  margin-bottom: 24px;\n  max-width: 100%;\n  width: 100%;\n\n  &.center {\n    margin: 0 auto;\n    width: max-content;\n  }\n\n  &.half {\n    max-width: calc(50% - 12px);\n  }\n}\n\napp-button {\n  width: 100%;\n}\n\n.closeButton {\n  align-items: center;\n  background-color: var(--background);\n  border-radius: 100%;\n  color: var(--white);\n  display: flex;\n  font-size: 12px;\n  height: 24px;\n  justify-content: center;\n  position: absolute;\n  right: -24px;\n  padding: 0;\n  transform: translate(50%, -50%);\n  top: -24px;\n  width: 24px;\n}\n",
                    "styleUrl": "./form-provides.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form (submit)=\"_submit()\" [formGroup]=\"form\">\n  <h3 class=\"title\">FormulÃ¡rio para criar um novo fornecedor</h3>\n\n  <div class=\"input center\">\n    <app-input-photo\n      id=\"name\"\n      label=\"Nome\"\n      placeholder=\"Nome do fornecedor\"\n      formControlName=\"name\"\n    ></app-input-photo>\n    <app-error-message [control]=\"form.get('name')\"> </app-error-message>\n  </div>\n\n  <div class=\"input\">\n    <app-input-text\n      id=\"name\"\n      label=\"Nome\"\n      placeholder=\"Nome do fornecedor\"\n      [error]=\"!!form.get('name')?.invalid && !!form.get('name')?.touched\"\n      formControlName=\"name\"\n    ></app-input-text>\n    <app-error-message [control]=\"form.get('name')\"> </app-error-message>\n  </div>\n\n  <div class=\"input\">\n    <app-input-text\n      id=\"representative\"\n      label=\"Representante\"\n      placeholder=\"Nome do representante\"\n      [error]=\"\n        !!form.get('representative')?.invalid &&\n        !!form.get('representative')?.touched\n      \"\n      formControlName=\"representative\"\n    ></app-input-text>\n    <app-error-message [control]=\"form.get('representante')\">\n    </app-error-message>\n  </div>\n\n  <div class=\"input\">\n    <app-input-text\n      id=\"email\"\n      label=\"email\"\n      placeholder=\"email do fornecedor\"\n      [error]=\"!!form.get('email')?.invalid && !!form.get('email')?.touched\"\n      formControlName=\"email\"\n    ></app-input-text>\n    <app-error-message [control]=\"form.get('email')\"> </app-error-message>\n  </div>\n\n  <div class=\"input\">\n    <app-input-text\n      id=\"cellphone\"\n      label=\"Celular\"\n      formControlName=\"celphone\"\n      placeholder=\"Celular de contato\"\n      [error]=\"\n        !!form.get('celphone')?.invalid && !!form.get('celphone')?.touched\n      \"\n      mask=\"(00) 0 0000-0000||(00) 0000-0000\"\n    ></app-input-text>\n    <app-error-message [control]=\"form.get('celphone')\"> </app-error-message>\n  </div>\n\n  <app-button color=\"red\" [disabled]=\"form.invalid\" [loading]=\"loading\">\n    Cadastrar um novo fornecedor\n  </app-button>\n\n  <button type=\"button\" mat-dialog-close class=\"closeButton\">\n    <fa-icon [icon]=\"closeIcon\"></fa-icon>\n  </button>\n</form>\n"
        },
        {
            "name": "FormRegisterComponent",
            "id": "component-FormRegisterComponent-733578002dacd05c54ce7ddcc1a47f68423fec48b9af61cbb346e3ec1274fd2109b18f2c25128473e649cc5560a01ffa142066c74851727f0536b0c50aa4e09b",
            "file": "src/app/signup/pages/register/components/form-register/form-register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-register",
            "styleUrls": [
                "./form-register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "user",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\n@Component({\n  selector: 'app-form-register',\n  templateUrl: './form-register.component.html',\n  styleUrls: ['./form-register.component.scss'],\n})\nexport class FormRegisterComponent implements OnDestroy {\n  subscription!: Subscription;\n  errorMessage = '';\n  loading = false;\n  user: any = {};\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  submit(): void {\n    this.errorMessage = '';\n    this.loading = true;\n\n    this.subscription = this.authService.signup(this.user).subscribe({\n      next: async () => await this.router.navigateByUrl('/'),\n      error: ({ message }) => {\n        this.errorMessage = message;\n        this.loading = false;\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "form {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 100%;\n  width: 100%;\n}\n\n.input {\n  display: block;\n  margin-bottom: 24px;\n  max-width: 100%;\n  width: 100%;\n\n  &.half {\n    max-width: calc(50% - 12px);\n  }\n}\n\napp-button {\n  width: 100%;\n}\n\napp-alert {\n  display: block;\n  margin: 16px 0;\n}\n",
                    "styleUrl": "./form-register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<form novalidate=\"false\" (submit)=\"submit()\" autocomplete=\"off\" #form=\"ngForm\">\n  <div class=\"input\">\n    <app-input-text\n      id=\"name\"\n      name=\"name\"\n      label=\"name\"\n      #name=\"ngModel\"\n      placeholder=\"Name\"\n      [(ngModel)]=\"user.name\"\n      [error]=\"!!name.invalid && !!name.touched\"\n      required\n    ></app-input-text>\n    <app-error-message [model]=\"name\"> </app-error-message>\n  </div>\n\n  <div class=\"input\">\n    <app-input-text\n      id=\"email\"\n      name=\"email\"\n      label=\"Email\"\n      #email=\"ngModel\"\n      placeholder=\"Email address\"\n      [(ngModel)]=\"user.email\"\n      [error]=\"!!email.invalid && !!email.touched\"\n      required\n      email\n    ></app-input-text>\n    <app-error-message [model]=\"email\"> </app-error-message>\n  </div>\n\n  <div class=\"input half\">\n    <app-input-password\n      id=\"password\"\n      name=\"password\"\n      label=\"Password\"\n      #password=\"ngModel\"\n      [(ngModel)]=\"user.password\"\n      [error]=\"!!password.errors && !!password.touched\"\n      placeholder=\"Password\"\n      required\n    ></app-input-password>\n    <app-error-message [model]=\"password\"> </app-error-message>\n  </div>\n\n  <div class=\"input half\">\n    <app-input-password\n      id=\"confirm_password\"\n      name=\"confirm_password\"\n      label=\"Confirm Password\"\n      placeholder=\"Confirm Password\"\n      [(ngModel)]=\"user.confirm_password\"\n      [error]=\"!!confirm_password.errors && !!confirm_password.touched\"\n      #confirm_password=\"ngModel\"\n      required\n    ></app-input-password>\n    <app-error-message [model]=\"confirm_password\"> </app-error-message>\n  </div>\n\n  <app-button [loading]=\"loading\" [disabled]=\"!!form.invalid\" type=\"submit\">\n    Register\n  </app-button>\n</form>\n\n<app-alert *ngIf=\"errorMessage\">\n  {{ errorMessage }}\n</app-alert>\n"
        },
        {
            "name": "FormSearchComponent",
            "id": "component-FormSearchComponent-9da855a4614b3036c38a54d7ee4f28e70c9fe2b9145042ce8a513d5bf56231faf31e5bbce3e3c5ef226e9789f9f8aa147b9a16dfdfd6bcc69413f3766df07b44",
            "file": "src/app/shared/components/forms/form-search/form-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-search",
            "styleUrls": [
                "./form-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "createItem",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "search",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "createClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-search',\n  templateUrl: './form-search.component.html',\n  styleUrls: ['./form-search.component.scss'],\n})\nexport class FormSearchComponent implements OnInit {\n  @Output() search = new EventEmitter<string>();\n  @Output() createItem = new EventEmitter<void>();\n  @Input() placeholder = '';\n  form!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      search: [null, Validators.required],\n    });\n  }\n\n  submit(): void {\n    const { search } = this.form.getRawValue();\n    this.search.emit(search);\n  }\n\n  createClick(): void {\n    this.createItem.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form {\n  align-items: flex-end;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  width: 100%;\n\n  @media (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n\n  .input {\n    width: 100%;\n    margin-bottom: 24px;\n\n    @media (min-width: 768px) {\n      flex: 1;\n      margin-bottom: 0;\n      margin-right: 24px;\n    }\n  }\n\n  app-button {\n    flex: 1;\n\n    @media (min-width: 768px) {\n      flex: unset;\n    }\n  }\n\n  app-button:not(:last-child) {\n    margin-right: 14px;\n  }\n}\n",
                    "styleUrl": "./form-search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"form\" (submit)=\"submit()\" class=\"form content\">\n  <app-input-text\n    class=\"input\"\n    label=\"Search\"\n    formControlName=\"search\"\n    [error]=\"!!form.get('search')?.touched && !!form.get('search')?.invalid\"\n  ></app-input-text>\n\n  <app-error-message [control]=\"form.get('search')\"></app-error-message>\n\n  <app-button [disabled]=\"form.invalid\" type=\"submit\">Search</app-button>\n  <app-button color=\"red\" (click)=\"createClick()\" type=\"button\">\n    Criar\n  </app-button>\n</form>\n"
        },
        {
            "name": "GenericItemComponent",
            "id": "component-GenericItemComponent-cdb6f6c6bfb8a077bc8251f601fe088e1ea6eef00d5749f08ceafaf595d183b4f5d498bdfc934180a2015eb1d92bcf807c02f8f0ff37f7f5f4bae540da3d1637",
            "file": "src/app/shared/components/itens/generic-item/generic-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-generic-item",
            "styleUrls": [
                "./generic-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./generic-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-generic-item',\n  templateUrl: './generic-item.component.html',\n  styleUrls: ['./generic-item.component.scss'],\n})\nexport class GenericItemComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./generic-item.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h3 class=\"item\">\n  <ng-content></ng-content>\n</h3>\n"
        },
        {
            "name": "GenericItemLoadingComponent",
            "id": "component-GenericItemLoadingComponent-29bbf219a0b0fc3bef1708b9f8fa519d0a16234cd18c447528469046dfb211ab36acd80c0a97a3e98c052507ebd74092abba03b145f8279a7b353ef9315142ee",
            "file": "src/app/shared/components/itens/generic-item-loading/generic-item-loading.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-generic-item-loading",
            "styleUrls": [
                "./generic-item-loading.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./generic-item-loading.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-generic-item-loading',\n  templateUrl: './generic-item-loading.component.html',\n  styleUrls: ['./generic-item-loading.component.scss'],\n})\nexport class GenericItemLoadingComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item {\n  justify-content: space-between;\n}\n\n.bar {\n  background-color: var(--gray-dark);\n  box-shadow: 0 4px 10px 0 rgba(33, 33, 33, 0.15);\n  border-radius: 4px;\n  height: 24px;\n  max-width: 100%;\n  position: relative;\n  overflow: hidden;\n  width: 150px;\n\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: -150px;\n    top: 0;\n    height: 100%;\n    width: 150px;\n    background: linear-gradient(\n      to right,\n      transparent 0%,\n      #e8e8e8 50%,\n      transparent 100%\n    );\n    animation: load 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;\n  }\n\n  &.lg {\n    width: 400px;\n  }\n\n  &.sm {\n    width: 60px;\n  }\n}\n\n@keyframes load {\n  from {\n    left: -150px;\n  }\n  to {\n    left: 100%;\n  }\n}\n",
                    "styleUrl": "./generic-item-loading.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"item\">\n  <div class=\"bar\"></div>\n  <div class=\"bar lg\"></div>\n  <div class=\"bar\"></div>\n  <div class=\"bar sm\"></div>\n</div>\n"
        },
        {
            "name": "GenericTableComponent",
            "id": "component-GenericTableComponent-49286e29fcafd611614d502c8d7e79139817868fd192c10987efa52857d90ec4663110f85d60754bf726aabbee76b6524c11bdb69723c60f1e78668c23ee4d94",
            "file": "src/app/shared/components/tables/generic-table/generic-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-generic-table",
            "styleUrls": [
                "./generic-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./generic-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "domain",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filterIcon",
                    "defaultValue": "faFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "nextIcon",
                    "defaultValue": "faAngleRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "prevIcon",
                    "defaultValue": "faAngleLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "sortIcon",
                    "defaultValue": "faSortAmountUp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport {\n  faAngleLeft,\n  faAngleRight,\n  faFilter,\n  faSortAmountUp,\n} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-generic-table',\n  templateUrl: './generic-table.component.html',\n  styleUrls: ['./generic-table.component.scss'],\n})\nexport class GenericTableComponent {\n  @Input() domain = '';\n  sortIcon = faSortAmountUp;\n  nextIcon = faAngleRight;\n  prevIcon = faAngleLeft;\n  filterIcon = faFilter;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".table {\n  background: var(--white);\n  border: 1px solid #dfe0eb;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n\n  &_header {\n    display: flex;\n    justify-content: space-between;\n    padding: 32px;\n\n    &_title {\n      color: var(--text);\n      font-weight: bold;\n      font-size: 19px;\n      line-height: 24px;\n      letter-spacing: 0.4px;\n    }\n\n    &_filter {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n\n      .filter:not(:last-child) {\n        display: block;\n        margin-right: 32px;\n      }\n\n      fa-icon {\n        color: #c5c7cd;\n        margin-right: 8px;\n      }\n    }\n  }\n\n  &_body {\n  }\n\n  &_footer {\n    align-items: center;\n    color: var(--gray-dark);\n    display: flex;\n    font-size: 14px;\n    justify-content: flex-end;\n    letter-spacing: 0.3px;\n    line-height: 20px;\n    padding: 24px 32px;\n    text-align: right;\n\n    &_per-page {\n      margin-right: 46px;\n    }\n\n    &_pages {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n    }\n\n    &_button {\n      color: var(--gray-dark);\n      display: block;\n      font-size: 24px;\n      padding: 0;\n\n      &:not(:last-child) {\n        margin-left: 26px;\n        margin-right: 12px;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./generic-table.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"table\">\n  <div class=\"table_header\">\n    <h2 class=\"table_header_title\">All {{ domain }}</h2>\n\n    <div class=\"table_header_filter\">\n      <div class=\"filter\">\n        <fa-icon class=\"icon\" [icon]=\"sortIcon\"></fa-icon>\n        Sort\n      </div>\n\n      <div class=\"filter\">\n        <fa-icon class=\"icon\" [icon]=\"filterIcon\"></fa-icon>\n        Filter\n      </div>\n    </div>\n  </div>\n\n  <div role=\"list\" class=\"table_body\">\n    <ng-content></ng-content>\n  </div>\n\n  <div class=\"table_footer\">\n    <div class=\"table_footer_per-page\">Rows per page: 8</div>\n\n    <div class=\"table_footer_pages\">\n      1-8 of 1240\n      <button class=\"table_footer_button\">\n        <fa-icon [icon]=\"prevIcon\"></fa-icon>\n      </button>\n      <button class=\"table_footer_button\">\n        <fa-icon [icon]=\"nextIcon\"></fa-icon>\n      </button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-bef252ccf8982b269f9d0eda0425616b475f7679bd2e91592b24a0d6184a9086c5c41d2c1bd54494cdd637e75b4046ed5a6275de5325d673f292c8739883890f-1",
            "file": "src/app/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  &_avatar {\n    align-items: center;\n    color: var(--text);\n    border: 1.5px #dfe0eb;\n    border-radius: 100%;\n    display: flex;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 20px;\n    letter-spacing: 0.2px;\n    text-align: right;\n\n    app-avatar {\n      display: block;\n      margin-left: 14px;\n    }\n  }\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header class=\"header\">\n  Tickets\n\n  <div class=\"header_avatar\">\n    Jones Ferdinand\n\n    <app-avatar\n      name=\"Jones Ferdinand\"\n      avatar=\"https://dummyimage.com/60x60/000/fff\"\n    ></app-avatar>\n  </div>\n</header>\n"
        },
        {
            "name": "InputCurrencyComponent",
            "id": "component-InputCurrencyComponent-eac471a7897fb087f5b0e3d51780d0ec890066c1e8c52650f2eda9d540bc1b88420b07e56fed0a37cc84fbfd30e40d8007fa95175cdbb1a7457b798e29c5e1a1",
            "file": "src/app/shared/components/inputs/input-currency/input-currency.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputCurrencyComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input-currency",
            "styleUrls": [
                "./input-currency.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-currency.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "val",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-currency',\n  templateUrl: './input-currency.component.html',\n  styleUrls: ['./input-currency.component.scss'],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputCurrencyComponent),\n    },\n  ],\n})\nexport class InputCurrencyComponent implements OnInit, ControlValueAccessor {\n  @Input() placeholder = '';\n  @Input() type = 'text';\n  @Input() error = false;\n  @Input() label = '';\n  @Input() id = '';\n  val = '';\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n\n  onTouched: any = () => {};\n\n  constructor() {}\n\n  get value() {\n    return this.val;\n  }\n\n  set value(val) {\n    if (val !== undefined && val !== null) {\n      this.val = val;\n      this.onChange(val);\n      this.onTouched(val);\n    }\n  }\n\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-text {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  input {\n    appearance: none;\n    background: var(--light);\n    border: 1px solid var(--gray);\n    border-radius: 8px;\n    box-sizing: border-box;\n    color: var(--text);\n    font-family: var(--font-family);\n    padding: 12px 16px;\n    transition: var(--transition);\n    width: 100%;\n\n    &::placeholder {\n      color: var(--text-light);\n      font-family: var(--font-family);\n      font-size: 14px;\n      letter-spacing: 0.3px;\n      line-height: 20px;\n      opacity: 0.4;\n    }\n  }\n\n  label {\n    color: var(--gray-dark);\n    font-size: 12px;\n    font-style: normal;\n    font-weight: bold;\n    line-height: 15px;\n    letter-spacing: 0.3px;\n    margin-bottom: var(--space-xs);\n    text-transform: uppercase;\n  }\n\n  &.has-error {\n    input::placeholder,\n    label {\n      color: var(--red-medium);\n    }\n\n    input {\n      border-color: var(--red-medium);\n    }\n  }\n}\n",
                    "styleUrl": "./input-currency.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 28
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 36,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                }
            },
            "templateData": "<div class=\"input-text\" [ngClass]=\"{ 'has-error': error }\">\n  <div class=\"input-text_header\">\n    <label [for]=\"id\">{{ label }}</label>\n\n    <div class=\"input-text_header_right\">\n      <ng-content select=\"[right]\"></ng-content>\n    </div>\n  </div>\n\n  <input\n    [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\"\n    [(ngModel)]=\"value\"\n    [id]=\"id\"\n    [name]=\"id\"\n    [type]=\"type\"\n    [placeholder]=\"placeholder\"\n    currencyMask\n  />\n</div>\n"
        },
        {
            "name": "InputPasswordComponent",
            "id": "component-InputPasswordComponent-9079ff11d92a03095a444a0c66fdfb0248b91f4962603feed33e198f79fbf36aee4c178c9ea7d73ca18b0befd435dd01348741c63be92e9c1a6294c96d8c034f",
            "file": "src/app/shared/components/inputs/input-password/input-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputPasswordComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input-password",
            "styleUrls": [
                "./input-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "icon",
                    "defaultValue": "faEye",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "val",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "changeType",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-input-password',\n  templateUrl: './input-password.component.html',\n  styleUrls: ['./input-password.component.scss'],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputPasswordComponent),\n    },\n  ],\n})\nexport class InputPasswordComponent implements OnInit, ControlValueAccessor {\n  @Input() placeholder = '';\n  @Input() error = false;\n  @Input() label = '';\n  @Input() id = '';\n  type = 'text';\n  icon = faEye;\n  val = '';\n\n  ngOnInit(): void {\n    this.changeType();\n  }\n\n  changeType(): void {\n    if (this.type === 'text') {\n      this.type = 'password';\n      this.icon = faEye;\n    } else {\n      this.type = 'text';\n      this.icon = faEyeSlash;\n    }\n  }\n\n  onChange: any = () => {};\n\n  onTouched: any = () => {};\n\n  get value() {\n    return this.val;\n  }\n\n  set value(val) {\n    if (val !== undefined && val !== null) {\n      this.val = val;\n      this.onChange(val);\n      this.onTouched(val);\n    }\n  }\n\n  onBlur() {}\n\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-text {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n\n  input {\n    appearance: none;\n    background: var(--light);\n    border: 1px solid var(--gray);\n    border-radius: 8px;\n    box-sizing: border-box;\n    color: var(--text);\n    font-family: var(--font-family);\n    padding: 12px 16px;\n    transition: var(--transition);\n    width: 100%;\n\n    &::placeholder {\n      color: var(--text-light);\n      font-family: var(--font-family);\n      font-size: 14px;\n      letter-spacing: 0.3px;\n      line-height: 20px;\n      opacity: 0.4;\n    }\n  }\n\n  label {\n    color: var(--gray-dark);\n    font-size: 12px;\n    font-style: normal;\n    font-weight: bold;\n    line-height: 15px;\n    letter-spacing: 0.3px;\n    margin-bottom: var(--space-xs);\n    text-transform: uppercase;\n  }\n\n  .icon {\n    bottom: 50%;\n    color: var(--text-light);\n    cursor: pointer;\n    position: absolute;\n    right: 24px;\n    top: 50%;\n  }\n\n  &.has-error {\n    input::placeholder,\n    label {\n      color: var(--red-medium);\n    }\n\n    input {\n      border-color: var(--red-medium);\n    }\n  }\n}\n",
                    "styleUrl": "./input-password.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 48,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 44
                    }
                }
            },
            "templateData": "<div class=\"input-text\" [ngClass]=\"{ 'has-error': error }\">\n  <div class=\"input-text_header\">\n    <label [for]=\"id\">{{ label }}</label>\n\n    <div class=\"input-text_header_right\">\n      <ng-content select=\"[right]\"></ng-content>\n    </div>\n  </div>\n\n  <input\n    [(ngModel)]=\"value\"\n    [id]=\"id\"\n    [name]=\"id\"\n    [type]=\"type\"\n    [placeholder]=\"placeholder\"\n  />\n\n  <fa-icon class=\"icon\" (click)=\"changeType()\" [icon]=\"icon\"></fa-icon>\n</div>\n"
        },
        {
            "name": "InputPhotoComponent",
            "id": "component-InputPhotoComponent-6ffde909ff67bbc5780a10efe010c0b51ac5878576636a947b9818d41b2ef0e739e95cf273948b9558d7e086f35c82cbdf85120b419b9168c4535229f40b44ed",
            "file": "src/app/shared/components/inputs/input-photo/input-photo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputPhotoComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input-photo",
            "styleUrls": [
                "./input-photo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-photo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconUpload",
                    "defaultValue": "faCloudUploadAlt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "val",
                    "defaultValue": "{\n    b64: '',\n    file: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputPhotoValue",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showImage",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport interface InputPhotoValue {\n  b64: string;\n  file: any;\n}\n\n@Component({\n  selector: 'app-input-photo',\n  templateUrl: './input-photo.component.html',\n  styleUrls: ['./input-photo.component.scss'],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputPhotoComponent),\n    },\n  ],\n})\nexport class InputPhotoComponent implements OnInit, ControlValueAccessor {\n  @Input() id = '';\n  iconUpload = faCloudUploadAlt;\n  val: InputPhotoValue = {\n    b64: '',\n    file: '',\n  };\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n\n  onTouched: any = () => {};\n\n  get value() {\n    return this.val;\n  }\n\n  set value(val) {\n    if (val !== undefined && val !== null) {\n      this.val = val;\n      this.onChange(val);\n      this.onTouched(val);\n    }\n  }\n\n  onBlur() {}\n\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  showImage(event: any): void {\n    const files: FileList = event.target.files;\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      this.value = {\n        b64: reader.result as string,\n        file: files[0],\n      };\n    };\n\n    reader.readAsDataURL(files[0]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-photo {\n  background-color: var(--background);\n  border-radius: 100%;\n  height: 140px;\n  position: relative;\n  width: 140px;\n\n  &_photo {\n    border-radius: 100%;\n    height: 140px;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 140px;\n\n    &:invalid {\n      display: none;\n    }\n  }\n\n  &_input {\n    display: none;\n  }\n\n  &_button {\n    background: var(--gray-dark);\n    border-radius: 4px;\n    color: var(--white);\n    font-size: 20px;\n    padding: 4px 12px;\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n}\n",
                    "styleUrl": "./input-photo.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                }
            },
            "templateData": "<div class=\"input-photo\">\n  <img *ngIf=\"value.b64\" [src]=\"value.b64\" class=\"input-photo_photo\" />\n  <input\n    #inputFile\n    type=\"file\"\n    [id]=\"id\"\n    [name]=\"id\"\n    (change)=\"showImage($event)\"\n    accept=\"image/png, image/jpeg\"\n    class=\"input-photo_input\"\n  />\n  <button (click)=\"inputFile.click()\" class=\"input-photo_button\">\n    <fa-icon [icon]=\"iconUpload\"></fa-icon>\n  </button>\n</div>\n"
        },
        {
            "name": "InputTextComponent",
            "id": "component-InputTextComponent-0c04212ce582bf032d9cca001ab79261aa0643f79881349666e7ba02dcda1a78eb529931e3e5a655cc6b2fcbb8c9cf1f643876132c461dfc48f2c387f93c6d7f",
            "file": "src/app/shared/components/inputs/input-text/input-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputTextComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input-text",
            "styleUrls": [
                "./input-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mask",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "val",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-text',\n  templateUrl: './input-text.component.html',\n  styleUrls: ['./input-text.component.scss'],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputTextComponent),\n    },\n  ],\n})\nexport class InputTextComponent implements OnInit, ControlValueAccessor {\n  @Input() placeholder = '';\n  @Input() type = 'text';\n  @Input() error = false;\n  @Input() label = '';\n  @Input() mask = '';\n  @Input() id = '';\n  val = '';\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n\n  onTouched: any = () => {};\n\n  constructor() {}\n\n  get value() {\n    return this.val;\n  }\n\n  set value(val) {\n    if (val !== undefined && val !== null) {\n      this.val = val;\n      this.onChange(val);\n      this.onTouched(val);\n    }\n  }\n\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-text {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  input {\n    appearance: none;\n    background: var(--light);\n    border: 1px solid var(--gray);\n    border-radius: 8px;\n    box-sizing: border-box;\n    color: var(--text);\n    font-family: var(--font-family);\n    padding: 12px 16px;\n    transition: var(--transition);\n    width: 100%;\n\n    &::placeholder {\n      color: var(--text-light);\n      font-family: var(--font-family);\n      font-size: 14px;\n      letter-spacing: 0.3px;\n      line-height: 20px;\n      opacity: 0.4;\n    }\n  }\n\n  label {\n    color: var(--gray-dark);\n    font-size: 12px;\n    font-style: normal;\n    font-weight: bold;\n    line-height: 15px;\n    letter-spacing: 0.3px;\n    margin-bottom: var(--space-xs);\n    text-transform: uppercase;\n  }\n\n  &.has-error {\n    input::placeholder,\n    label {\n      color: var(--red-medium);\n    }\n\n    input {\n      border-color: var(--red-medium);\n    }\n  }\n}\n",
                    "styleUrl": "./input-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 29
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 37,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 33
                    }
                }
            },
            "templateData": "<div class=\"input-text\" [ngClass]=\"{ 'has-error': error }\">\n  <div class=\"input-text_header\">\n    <label [for]=\"id\">{{ label }}</label>\n\n    <div class=\"input-text_header_right\">\n      <ng-content select=\"[right]\"></ng-content>\n    </div>\n  </div>\n\n  <input\n    [(ngModel)]=\"value\"\n    [id]=\"id\"\n    [mask]=\"mask\"\n    [name]=\"id\"\n    [type]=\"type\"\n    [placeholder]=\"placeholder\"\n  />\n</div>\n"
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-636c269a08b87062681eb62dbaeda79693cf7d074d5c72395416893a73eb97437291ffd749787bf56bf5f1ede64e7a6a1bab97a3a75583bf9c39200401f18790",
            "file": "src/app/shared/components/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list",
            "styleUrls": [
                "./list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit {\n  @Input() title = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  background: var(--white);\n  border: 1px solid #dfe0eb;\n  border-radius: 8px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n  width: 100%;\n\n  &_header {\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: 32px 32px 16px 32px;\n\n    &_aside {\n      margin-left: 24px;\n    }\n  }\n\n  &_title {\n    color: var(--text);\n    flex: 1;\n    font-size: 19px;\n    font-style: normal;\n    font-weight: bold;\n    letter-spacing: 0.4px;\n    line-height: 24px;\n  }\n\n  &_list :ng-deep li:last-child {\n    border: none;\n  }\n}\n",
                    "styleUrl": "./list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n  <div class=\"container_header\">\n    <h3 class=\"container_title\">{{ title }}</h3>\n\n    <div class=\"container_header_aside\">\n      <ng-content select=\"[header-aside]\"></ng-content>\n    </div>\n  </div>\n\n  <ul class=\"container_list\">\n    <ng-content></ng-content>\n  </ul>\n</div>\n"
        },
        {
            "name": "ListItemComponent",
            "id": "component-ListItemComponent-e055ea29f4f1023223eb73cea0362f6b5c5063186353c0f647ecef85620ae11827eacf88ad3ed9c4d0aa29f8e091c190d6e7ee2a9ccec60df6642a44ce9b44c4",
            "file": "src/app/shared/components/itens/list-item/list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list-item",
            "styleUrls": [
                "./list-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.scss'],\n})\nexport class ListItemComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item {\n  border-bottom: 1px solid #dfe0eb;\n  display: flex;\n  justify-content: flex-start;\n  padding: 20px 32px;\n\n  &_content {\n    flex: 1;\n    text-align: left;\n  }\n\n  &_aside {\n    text-align: right;\n  }\n}\n",
                    "styleUrl": "./list-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<li class=\"item\">\n  <div class=\"item_content\">\n    <ng-content></ng-content>\n  </div>\n\n  <div class=\"item_aside\">\n    <ng-content select=\"[aside]\"></ng-content>\n  </div>\n</li>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-c6140427ead828f11e2d307b028b9602753e4fc31fce169ab99d91a287705cb42bc917cf0708f88c8e92456818b59947836428bf08cdc76c6c21326806b78f9f",
            "file": "src/app/signup/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private title: Title) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(`${environment.app_name} | Login`);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  background: var(--white);\n  border: 1px solid #dfe0eb;\n  box-sizing: border-box;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  max-width: 480px;\n  padding: 32px;\n  text-align: center;\n  width: 100%;\n\n  &_header {\n    margin-bottom: 48px;\n  }\n\n  h1 {\n    color: var(--text);\n    font-size: 24px;\n    font-weight: bold;\n    line-height: 30px;\n    letter-spacing: 0.3px;\n    margin-bottom: 12px;\n  }\n\n  p {\n    color: var(--gray-dark);\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.3px;\n  }\n\n  img {\n    display: block;\n    margin: 0 auto 8px;\n    max-height: 100%;\n    max-width: 100%;\n    object-fit: contain;\n  }\n\n  &_footer {\n    margin-top: 32px;\n\n    a {\n      color: var(--gray-dark);\n      font-size: 14px;\n      letter-spacing: 0.3px;\n      line-height: 20px;\n      text-align: center;\n    }\n\n    strong {\n      color: var(--primary);\n    }\n  }\n}\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n  <div class=\"container_header\">\n    <img src=\"/assets/logo.png\" alt=\"logo\" />\n    <h1>LogIn</h1>\n    <p>Enter your email and password below</p>\n  </div>\n\n  <app-form-login></app-form-login>\n\n  <div class=\"container_footer\">\n    <a routerLink=\"../register\">\n      Donât have an account? <strong>Sign up</strong>\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "ModalCreateComponent",
            "id": "component-ModalCreateComponent-b536845c295284705036d8a5264599b637491d44620a8639ff8701611c36a9218e79cca751a64acd1584bcd525ece8cb646d825f360ce69976bf5bfcaf194934",
            "file": "src/app/signin/pages/products/components/modal-create/modal-create.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-create",
            "styleUrls": [
                "./modal-create.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-create.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "createProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProductCreate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProductCreate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { IProductCreate } from '../../interfaces/products';\nimport { ProductService } from '../../services/product/product.service';\n\n@Component({\n  selector: 'app-modal-create',\n  templateUrl: './modal-create.component.html',\n  styleUrls: ['./modal-create.component.scss'],\n})\nexport class ModalCreateComponent implements OnDestroy {\n  subscription: Subscription | undefined;\n  loading = false;\n  constructor(\n    private productService: ProductService,\n    private dialog: MatDialog,\n  ) {}\n\n  createProduct(product: IProductCreate): void {\n    this.loading = true;\n    this.subscription = this.productService.create(product).subscribe({\n      next: () => {\n        this.dialog.closeAll();\n        this.loading = false;\n      },\n      error: ({ message }) => {\n        this.loading = false;\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal-create.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<app-form-product\n  [loading]=\"loading\"\n  (submit)=\"createProduct($event)\"\n></app-form-product>\n"
        },
        {
            "name": "ModalCreateComponent",
            "id": "component-ModalCreateComponent-873d6dc1e402d50ecfad0ee26e0c57e209bc93fc3bd934aecd7f1b494b0bd54c64b200b40f9db082c62ab049a115c6cd6ae634496c5897187154b6560778d275-1",
            "file": "src/app/signin/pages/provides/components/modal-create/modal-create.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-create",
            "styleUrls": [
                "./modal-create.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-create.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "subcription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "createProvider",
                    "args": [
                        {
                            "name": "provider",
                            "type": "IProvidesCreate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "provider",
                            "type": "IProvidesCreate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { ProviderService } from '../../services/providers/provider.service';\nimport { IProvidesCreate } from '../form-provides/form-provides.component';\n\n@Component({\n  selector: 'app-modal-create',\n  templateUrl: './modal-create.component.html',\n  styleUrls: ['./modal-create.component.scss'],\n})\nexport class ModalCreateComponent implements OnDestroy {\n  subcription: Subscription | undefined;\n  loading = false;\n\n  constructor(\n    private providerService: ProviderService,\n    private dialog: MatDialog,\n  ) {}\n\n  createProvider(provider: IProvidesCreate): void {\n    this.loading = true;\n\n    this.subcription = this.providerService.create(provider).subscribe({\n      next: () => {\n        this.dialog.closeAll();\n        this.loading = false;\n      },\n      error: () => {\n        this.loading = false;\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subcription?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal-create.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "providerService",
                        "type": "ProviderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "providerService",
                        "type": "ProviderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ModalCreateComponent-1",
            "templateData": "<app-form-provides\n  [loading]=\"loading\"\n  (submit)=\"createProvider($event)\"\n></app-form-provides>\n"
        },
        {
            "name": "ModalUpdateComponent",
            "id": "component-ModalUpdateComponent-1271ab21073c07367131544f5bb00aafc1b2937f0db755da40fdd9f6056b61297c97ee2aeba121c3b9496fe49f04ad48220ce59beef9cf0a7942e85c2871e20c",
            "file": "src/app/signin/pages/products/components/modal-update/modal-update.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-update",
            "styleUrls": [
                "./modal-update.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-update.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "IProductCreate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "IProductCreate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { IProductCreate } from '../../interfaces/products';\nimport { ProductService } from '../../services/product/product.service';\n\n@Component({\n  selector: 'app-modal-update',\n  templateUrl: './modal-update.component.html',\n  styleUrls: ['./modal-update.component.scss'],\n})\nexport class ModalUpdateComponent implements OnDestroy {\n  subscription: Subscription | undefined;\n  loading = false;\n\n  constructor(\n    private productService: ProductService,\n    private dialog: MatDialog,\n  ) {}\n\n  updateProduct(product: IProductCreate): void {\n    this.loading = true;\n    this.subscription = this.productService.update('22', product).subscribe({\n      next: () => {\n        this.dialog.closeAll();\n        this.loading = false;\n      },\n      error: () => {\n        this.loading = false;\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal-update.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<app-form-product\n  [loading]=\"loading\"\n  (submit)=\"updateProduct($event)\"\n></app-form-product>\n"
        },
        {
            "name": "ModalUpdateComponent",
            "id": "component-ModalUpdateComponent-1ef6079f76f2b6765394d511b37af87cecd8ce9add5468b8cd2c9c53d7534d9db6acdbfd3e99784f73021bd33e6159befeb6dda9d253ce848f62c32d81087136-1",
            "file": "src/app/signin/pages/provides/components/modal-update/modal-update.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-update",
            "styleUrls": [
                "./modal-update.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-update.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "subcription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "createProvider",
                    "args": [
                        {
                            "name": "provider",
                            "type": "IProvidesCreate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "provider",
                            "type": "IProvidesCreate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { ProviderService } from '../../services/providers/provider.service';\nimport { IProvidesCreate } from '../form-provides/form-provides.component';\n\n@Component({\n  selector: 'app-modal-update',\n  templateUrl: './modal-update.component.html',\n  styleUrls: ['./modal-update.component.scss'],\n})\nexport class ModalUpdateComponent implements OnDestroy {\n  subcription: Subscription | undefined;\n  loading = false;\n\n  constructor(\n    private providerService: ProviderService,\n    private dialog: MatDialog,\n  ) {}\n\n  createProvider(provider: IProvidesCreate): void {\n    this.loading = true;\n\n    this.subcription = this.providerService.update('22', provider).subscribe({\n      next: () => {\n        this.dialog.closeAll();\n        this.loading = false;\n      },\n      error: () => {\n        this.loading = false;\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subcription?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal-update.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "providerService",
                        "type": "ProviderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "providerService",
                        "type": "ProviderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ModalUpdateComponent-1",
            "templateData": "<app-form-provides\n  [loading]=\"loading\"\n  (submit)=\"createProvider($event)\"\n></app-form-provides>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ProductsComponent",
            "id": "component-ProductsComponent-b64f7f5efea489cc8a9ad7cae60b5e3d4e6f32b0828280098136d506bbf6e5d172de331e0096d91342049a1933dc607bbd83e46ef8f7cdaabb72c3e82e912295",
            "file": "src/app/signin/pages/products/products.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-products",
            "styleUrls": [
                "./products.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./products.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "products$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<IProduct[]>",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "createItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Title } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { scrollToTop } from 'src/app/shared/utils/scroll-to-top';\nimport { environment } from 'src/environments/environment';\nimport { ModalCreateComponent } from './components/modal-create/modal-create.component';\nimport { IProduct } from './interfaces/products';\nimport { ProductService } from './services/product/product.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\nexport class ProductsComponent implements OnInit {\n  products$: Observable<IProduct[]>;\n\n  constructor(\n    private productService: ProductService,\n    public dialog: MatDialog,\n    private title: Title,\n  ) {\n    this.products$ = this.productService.getAll();\n  }\n\n  ngOnInit(): void {\n    this.title.setTitle(`${environment.app_name} | Products`);\n    scrollToTop();\n  }\n\n  createItem(): void {\n    this.dialog.open(ModalCreateComponent);\n  }\n\n  updateItem(): void {\n    this.dialog.open(ModalCreateComponent);\n  }\n\n  deleteItem(): void {\n    this.dialog.open(ModalCreateComponent);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-form-search {\n  display: block;\n  margin-bottom: 24px;\n  width: 100%;\n}\n",
                    "styleUrl": "./products.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-form-search (createItem)=\"createItem()\"></app-form-search>\n\n<app-generic-table domain=\"Products\">\n  <app-tables-products-header></app-tables-products-header>\n\n  <ng-container *ngIf=\"products$ | async as products; else loading\">\n    <app-tables-products-item\n      *ngFor=\"let product of products\"\n      [product]=\"product\"\n    ></app-tables-products-item>\n\n    <app-generic-item *ngIf=\"!products.length\">\n      No products registered\n    </app-generic-item>\n  </ng-container>\n\n  <ng-template #loading>\n    <app-generic-item-loading></app-generic-item-loading>\n    <app-generic-item-loading></app-generic-item-loading>\n    <app-generic-item-loading></app-generic-item-loading>\n    <app-generic-item-loading></app-generic-item-loading>\n  </ng-template>\n</app-generic-table>\n"
        },
        {
            "name": "ProvidesComponent",
            "id": "component-ProvidesComponent-f5b1fab26a5d4d2ab90ba1402f210fbbc02582a1798e0625481b5f18860e0853f615c2960aaf696e485ed63a8da9863485aa4f55e5fc9ed7c137b0079ac43210",
            "file": "src/app/signin/pages/provides/provides.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-provides",
            "styleUrls": [
                "./provides.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./provides.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "provider$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<IProvider[]>",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Title } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { scrollToTop } from 'src/app/shared/utils/scroll-to-top';\nimport { environment } from 'src/environments/environment';\nimport { ModalCreateComponent } from './components/modal-create/modal-create.component';\nimport { IProvider } from './interfaces/provider';\nimport { ProviderService } from './services/providers/provider.service';\n\n@Component({\n  selector: 'app-provides',\n  templateUrl: './provides.component.html',\n  styleUrls: ['./provides.component.scss'],\n})\nexport class ProvidesComponent implements OnInit {\n  provider$: Observable<IProvider[]>;\n\n  constructor(\n    private providerService: ProviderService,\n    private dialog: MatDialog,\n    private title: Title,\n  ) {\n    this.provider$ = this.providerService.getAll();\n  }\n\n  ngOnInit(): void {\n    this.title.setTitle(`${environment.app_name} | Fornecedores`);\n    scrollToTop();\n  }\n\n  showModal(): void {\n    this.dialog.open(ModalCreateComponent);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-form-search {\n  display: block;\n  margin-bottom: 24px;\n  width: 100%;\n}\n",
                    "styleUrl": "./provides.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "providerService",
                        "type": "ProviderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "providerService",
                        "type": "ProviderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-form-search (createItem)=\"showModal()\"></app-form-search>\n\n<app-generic-table domain=\"Provides\">\n  <app-table-provides-header></app-table-provides-header>\n\n  <ng-container *ngIf=\"provider$ | async as providers; else loading\">\n    <app-table-provides-item\n      *ngFor=\"let provider of providers\"\n      [provider]=\"provider\"\n    ></app-table-provides-item>\n\n    <app-generic-item *ngIf=\"!providers.length\">\n      No provider registered\n    </app-generic-item>\n  </ng-container>\n\n  <ng-template #loading>\n    <app-generic-item-loading></app-generic-item-loading>\n    <app-generic-item-loading></app-generic-item-loading>\n    <app-generic-item-loading></app-generic-item-loading>\n    <app-generic-item-loading></app-generic-item-loading>\n  </ng-template>\n</app-generic-table>\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-da1b40a75e5c3bcd8c13bf099f198e233fcd7d786c6094f5bf07d6e6ce91ed6a35804898ba0fe297c152abb5e526cf6d79d3560fc68a3709250efe480e3053be",
            "file": "src/app/signup/pages/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  constructor(private title: Title) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(`${environment.app_name} | Cadastre-se`);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  background: var(--white);\n  border: 1px solid #dfe0eb;\n  box-sizing: border-box;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  max-width: 480px;\n  padding: 32px;\n  text-align: center;\n  width: 100%;\n\n  &_header {\n    margin-bottom: 48px;\n  }\n\n  h1 {\n    color: var(--text);\n    font-size: 24px;\n    font-weight: bold;\n    line-height: 30px;\n    letter-spacing: 0.3px;\n    margin-bottom: 12px;\n  }\n\n  p {\n    color: var(--gray-dark);\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.3px;\n  }\n\n  img {\n    display: block;\n    margin: 0 auto 8px;\n    max-height: 100%;\n    max-width: 100%;\n    object-fit: contain;\n  }\n\n  &_footer {\n    margin-top: 32px;\n\n    a {\n      color: var(--gray-dark);\n      font-size: 14px;\n      letter-spacing: 0.3px;\n      line-height: 20px;\n      text-align: center;\n    }\n\n    strong {\n      color: var(--primary);\n    }\n  }\n}\n",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n  <div class=\"container_header\">\n    <img src=\"/assets/logo.png\" alt=\"logo\" />\n    <h1>Regsiter</h1>\n    <p>create your account</p>\n  </div>\n\n  <app-form-register></app-form-register>\n\n  <div class=\"container_footer\">\n    <a routerLink=\"../login\">\n      Donât have an account? <strong>Sign up</strong>\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "SalesComponent",
            "id": "component-SalesComponent-fa4c315c581a0fe889d6ae12e0b192c3fb269db78460e98ce675c22173953d043adb1c65e89c8ed8efadcaac02df092295c8b66fe4bdc32b5abb7e2b65af4b47",
            "file": "src/app/signin/pages/sales/sales.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sales",
            "styleUrls": [
                "./sales.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sales.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { scrollToTop } from 'src/app/shared/utils/scroll-to-top';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.scss'],\n})\nexport class SalesComponent implements OnInit {\n  constructor(private title: Title) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(`${environment.app_name} | Vendas`);\n    scrollToTop();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-form-search {\n  display: block;\n  margin-bottom: 24px;\n  width: 100%;\n}\n",
                    "styleUrl": "./sales.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-form-search></app-form-search>\n\n<!-- <app-tables-products>\n  <app-tables-products-header></app-tables-products-header>\n  <app-tables-products-item\n    *ngFor=\"let item of [0, 1, 2, 3, 4, 5, 6, 7, 8]\"\n  ></app-tables-products-item>\n</app-tables-products> -->\n"
        },
        {
            "name": "SigninComponent",
            "id": "component-SigninComponent-ff2880c036d8de59ec35da2b8f72c20bb8c553daa40505c7c08e7b751299dff6b49cb8dd5b9baa583f672e57d2c0a7cfc2ebbe3d57ef28e03114e7efab6cfb27",
            "file": "src/app/signin/signin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signin",
            "styleUrls": [
                "./signin.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss'],\n})\nexport class SigninComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "main {\n  background-color: var(--background-light);\n  display: flex;\n  min-height: 100vh;\n  width: 100%;\n}\n\n.container {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 30px;\n  max-width: 100%;\n\n  &_header {\n    margin-bottom: 54px;\n  }\n}\n",
                    "styleUrl": "./signin.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<main>\n  <app-aside></app-aside>\n\n  <div class=\"container\">\n    <div class=\"container_header\">\n      <app-header></app-header>\n    </div>\n\n    <router-outlet></router-outlet>\n  </div>\n</main>\n"
        },
        {
            "name": "SignupComponent",
            "id": "component-SignupComponent-3db8e2af35ef8d084370b43e3e1e2fd48aee877c48d6493104b06bb86fe42a31fd7294fbcf210f0e146b3fd818ae82aa74fc4dc4f05942fc5e59ed8c61d816a8",
            "file": "src/app/signup/signup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signup",
            "styleUrls": [
                "./signup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "main {\n  align-items: center;\n  background-color: var(--background);\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 24px;\n}\n",
                    "styleUrl": "./signup.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<main>\n  <router-outlet></router-outlet>\n</main>\n"
        },
        {
            "name": "TableProvidesHeaderComponent",
            "id": "component-TableProvidesHeaderComponent-2fa0c007d918895cb4c4bb1d439e7cae7aea99a6c2c82d2218403130243157eedac859f86ada81c375ea814666b3c1b6116d1036a31554721be442d7cc717afe",
            "file": "src/app/signin/pages/provides/components/table-provides-header/table-provides-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-provides-header",
            "styleUrls": [
                "./table-provides-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table-provides-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-provides-header',\n  templateUrl: './table-provides-header.component.html',\n  styleUrls: ['./table-provides-header.component.scss']\n})\nexport class TableProvidesHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item {\n  border-bottom: 1px solid #dfe0eb;\n  color: #9fa2b4;\n  display: flex;\n  font-size: 14px;\n  font-weight: bold;\n  letter-spacing: 0.2px;\n  line-height: 18px;\n  padding: 0 32px 12px;\n  text-align: right;\n\n  &_cell {\n    align-items: center;\n    display: flex;\n    flex: 1;\n\n    &.lg {\n      flex: 1 20%;\n      justify-content: flex-start;\n    }\n  }\n}\n",
                    "styleUrl": "./table-provides-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"item\">\n  <div class=\"item_cell lg\">Product</div>\n  <div class=\"item_cell\">Description</div>\n  <div class=\"item_cell\">Price buy</div>\n  <div class=\"item_cell\">Price sale</div>\n</div>\n"
        },
        {
            "name": "TableProvidesItemComponent",
            "id": "component-TableProvidesItemComponent-710ef5a3c3af10e35a47f94f114eeba0ff14582a60432d23b0ab0dcf06f1a2c9f9a0eda2889233ae17bddb36a7c5cc0ca86bf23965f4ba6388b2ecf112d2de41",
            "file": "src/app/signin/pages/provides/components/table-provides-item/table-provides-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-provides-item",
            "styleUrls": [
                "./table-provides-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table-provides-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "provider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "IProvider",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "optionsIcon",
                    "defaultValue": "faEllipsisV",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { IProvider } from '../../interfaces/provider';\n\n@Component({\n  selector: 'app-table-provides-item',\n  templateUrl: './table-provides-item.component.html',\n  styleUrls: ['./table-provides-item.component.scss'],\n})\nexport class TableProvidesItemComponent {\n  @Input() provider!: IProvider;\n  optionsIcon = faEllipsisV;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./table-provides-item.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"item\" role=\"listitem\">\n  <div class=\"item_cell lg\">\n    <app-avatar [name]=\"provider.name\" [avatar]=\"provider.photo\"></app-avatar>\n\n    <div class=\"item_description\">\n      {{ provider.name }}\n    </div>\n  </div>\n\n  <div class=\"item_cell\">\n    <div class=\"item_description\">\n      {{ provider.email }}\n    </div>\n  </div>\n\n  <div class=\"item_cell\">\n    <div class=\"item_description\">\n      {{ provider.celphone }}\n    </div>\n  </div>\n\n  <div class=\"item_cell\">\n    <div class=\"item_description\">\n      {{ provider.representative }}\n    </div>\n  </div>\n\n  <div class=\"item_cell small\">\n    <button>\n      <fa-icon [icon]=\"optionsIcon\"></fa-icon>\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "TablesProductsHeaderComponent",
            "id": "component-TablesProductsHeaderComponent-919f2afae333da43385c6fd2efadff10a226c999a6a8ec9ca99bdbf3c927ece09e08117f5dfff2e6824b230df60fe4f13d3626ffd613228b3412b0394bf4ccdd",
            "file": "src/app/signin/pages/products/components/tables-products-header/tables-products-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tables-products-header",
            "styleUrls": [
                "./tables-products-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tables-products-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tables-products-header',\n  templateUrl: './tables-products-header.component.html',\n  styleUrls: ['./tables-products-header.component.scss'],\n})\nexport class TablesProductsHeaderComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item {\n  border-bottom: 1px solid #dfe0eb;\n  color: #9fa2b4;\n  display: flex;\n  font-size: 14px;\n  font-weight: bold;\n  letter-spacing: 0.2px;\n  line-height: 18px;\n  padding: 0 32px 12px;\n  text-align: right;\n\n  &_cell {\n    align-items: center;\n    display: flex;\n    flex: 1;\n\n    &.lg {\n      flex: 1 20%;\n      justify-content: flex-start;\n    }\n  }\n}\n",
                    "styleUrl": "./tables-products-header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"item\">\n  <div class=\"item_cell lg\">Product</div>\n  <div class=\"item_cell\">Description</div>\n  <div class=\"item_cell\">Price buy</div>\n  <div class=\"item_cell\">Price sale</div>\n</div>\n"
        },
        {
            "name": "TablesProductsItemComponent",
            "id": "component-TablesProductsItemComponent-76991ee4cf1bdcb145a92dccb1c4a3eb8c591acb0942404fca8cb9f430bfa006beeb6921b9dbb468c9e6d2bc0b853580027605df746b49fe0f2e5876fcf4b781",
            "file": "src/app/signin/pages/products/components/tables-products-item/tables-products-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tables-products-item",
            "styleUrls": [
                "./tables-products-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tables-products-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "IProduct",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "optionsIcon",
                    "defaultValue": "faEllipsisV",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { IProduct } from 'src/app/signin/pages/products/interfaces/products';\n\n@Component({\n  selector: 'app-tables-products-item',\n  templateUrl: './tables-products-item.component.html',\n  styleUrls: ['./tables-products-item.component.scss'],\n})\nexport class TablesProductsItemComponent {\n  @Input() product!: IProduct;\n  optionsIcon = faEllipsisV;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tables-products-item.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"item\" role=\"listitem\">\n  <div class=\"item_cell lg\">\n    <app-avatar [name]=\"product.name\" [avatar]=\"product.photo\"></app-avatar>\n\n    <div class=\"item_description\">\n      {{ product.name }}\n    </div>\n  </div>\n\n  <div class=\"item_cell\">\n    <div class=\"item_description\">\n      {{ product.description }}\n    </div>\n  </div>\n\n  <div class=\"item_cell\">\n    <div class=\"item_description\">\n      {{ product.price_buy }}\n    </div>\n  </div>\n\n  <div class=\"item_cell\">\n    <div class=\"item_description\">\n      {{ product.price_sale }}\n    </div>\n  </div>\n\n  <div class=\"item_cell small\">\n    <button>\n      <fa-icon [icon]=\"optionsIcon\"></fa-icon>\n    </button>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a3d76fc6684b2483b5a87a3823e17542b79f7394bb4191348cf580e5a6531bd37d3d40a97f8f56992afc3737c38b11e6d7ab5dedd21bd7198657d18734275ea8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ErrorInterceptor } from './shared/interceptors/error/error.interceptor';\nimport { LoggedGuard } from './shared/guards/logged.guard';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nconst ERROR_INTERCEPTOR_PROVIDER = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true,\n};\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [LoggedGuard, ERROR_INTERCEPTOR_PROVIDER],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-b13e3514fad392ca9bd643dba703c7267323646a43ff4a40bb639113dcb65fe9f4891624c4ff638f538468662ccbb791e9fe2d47ca370f21a465577f2af04d2e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoggedGuard } from './shared/guards/logged.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'signin',\n  },\n  {\n    path: 'signup',\n    loadChildren: () =>\n      \"import('./signup/signup.module').then((m) => m.SignupModule)\",\n  },\n  {\n    path: 'signin',\n    canActivate: [LoggedGuard],\n    loadChildren: () =>\n      \"import('./signin/signin.module').then((m) => m.SigninModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "id": "module-DashboardModule-2cf64312cca93ccfbd8c61954527aceb5da4dd46e054f02771f8fa46edbc9b53ba9880a90172fdbc1a64d9d4d34f6c4244f38d44780de23fa198216d37c45d6a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/pages/dashboard/dashboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [CommonModule, DashboardRoutingModule, SharedModule],\n  exports: [DashboardComponent],\n})\nexport class DashboardModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DashboardRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardRoutingModule",
            "id": "module-DashboardRoutingModule-732f5d757f1db8169ab759014459e2e6c62e27c4c072395c2ccda35987af310a83f08e2bc7cf59d63ba35f7ca59d2fb81b05f0c7cc5e2b0c05e3756f1661e8f9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/pages/dashboard/dashboard-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginModule",
            "id": "module-LoginModule-9ee73f2cd5c615f9cbdfc9c659eb55988abdb981cc8110d8729d2726865694521ab076073cedf65e03fa951b84e00793fcc218aaa7a1aeac397a585872ae3130",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signup/pages/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { LoginComponent } from './login.component';\nimport { FormLoginComponent } from './components/form-login/form-login.component';\nimport { LoginRoutingModule } from './login-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent, FormLoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    SharedModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  exports: [LoginComponent],\n})\nexport class LoginModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormLoginComponent"
                        },
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LoginRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginRoutingModule",
            "id": "module-LoginRoutingModule-41608ef59a77fd4f82810144cc2c8625f9eef14eb1c4e68475b142794a3cd10cd7bca3bf481fd3917651f24559900b0200de82033431a40b0dcd2909d36b080e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signup/pages/login/login-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsModule",
            "id": "module-ProductsModule-b52c2016ed7f61149fa3157f722fc2972a3f9cbe6ccfaddea01f007b9f5544192de72f377fac6acf447d1bdd007ca8029fccac2f8d2a720b8c95c5b3b202428b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/pages/products/products.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ProductsComponent } from './products.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { ProductService } from './services/product/product.service';\nimport { TablesProductsItemComponent } from './components/tables-products-item/tables-products-item.component';\nimport { TablesProductsHeaderComponent } from './components/tables-products-header/tables-products-header.component';\nimport { ModalCreateComponent } from './components/modal-create/modal-create.component';\nimport { FormProductComponent } from './components/form-product/form-product.component';\nimport { ModalUpdateComponent } from './components/modal-update/modal-update.component';\n\n@NgModule({\n  declarations: [\n    ProductsComponent,\n    TablesProductsHeaderComponent,\n    TablesProductsItemComponent,\n    ModalCreateComponent,\n    FormProductComponent,\n    ModalUpdateComponent,\n  ],\n  imports: [\n    CommonModule,\n    ProductsRoutingModule,\n    SharedModule,\n    FormsModule,\n    FontAwesomeModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n  ],\n  exports: [ProductsComponent],\n  providers: [ProductService],\n})\nexport class ProductsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ProductService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormProductComponent"
                        },
                        {
                            "name": "ModalCreateComponent"
                        },
                        {
                            "name": "ModalUpdateComponent"
                        },
                        {
                            "name": "ProductsComponent"
                        },
                        {
                            "name": "TablesProductsHeaderComponent"
                        },
                        {
                            "name": "TablesProductsItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProductsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsRoutingModule",
            "id": "module-ProductsRoutingModule-b48b3ef091e1b17e9ddd57f1783e693193639837730dec9c9eb6ac740a581c0ac14909b3dd02b652792bde65b364e3069ea76e13ea6ea7227b6c83d690a13239",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/pages/products/products-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductsComponent } from './products.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductsRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProvidesModule",
            "id": "module-ProvidesModule-dd96b6c0a2b602753a2b623879135c8dad3ebe9d4b309911a99cd18628b94eadc4d3c45e46da6899541bd7481eeeb46bc329574ede00e184e5693a03a0ff1d0c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/pages/provides/provides.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProvidesRoutingModule } from './provides-routing.module';\nimport { ProvidesComponent } from './provides.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { TableProvidesHeaderComponent } from './components/table-provides-header/table-provides-header.component';\nimport { TableProvidesItemComponent } from './components/table-provides-item/table-provides-item.component';\nimport { ProviderService } from './services/providers/provider.service';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormProvidesComponent } from './components/form-provides/form-provides.component';\nimport { ModalCreateComponent } from './components/modal-create/modal-create.component';\nimport { ModalUpdateComponent } from './components/modal-update/modal-update.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    ProvidesComponent,\n    TableProvidesHeaderComponent,\n    TableProvidesItemComponent,\n    FormProvidesComponent,\n    ModalCreateComponent,\n    ModalUpdateComponent,\n  ],\n  imports: [\n    CommonModule,\n    ProvidesRoutingModule,\n    SharedModule,\n    FontAwesomeModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n  ],\n  providers: [ProviderService],\n})\nexport class ProvidesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ProviderService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormProvidesComponent"
                        },
                        {
                            "name": "ProvidesComponent"
                        },
                        {
                            "name": "TableProvidesHeaderComponent"
                        },
                        {
                            "name": "TableProvidesItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProvidesRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProvidesRoutingModule",
            "id": "module-ProvidesRoutingModule-821508f2d2d616debcc1f3726e82912a069d7b56886a58845e52a11c9dd3a97e71ff72a9c48945564d0dca634ab2e7a32bedc5220e6a965ba9a5c319c939c63f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/pages/provides/provides-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProvidesComponent } from './provides.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProvidesComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidesRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegisterModule",
            "id": "module-RegisterModule-fcf73033f4d1c6d3c53de375d14757ab89e884407f8b6ea35fc5a5f4e70f2a2efd650894fa1be64683387d68f4969f2f6e81737036d3e79210666cde98bdf50c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signup/pages/register/register.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register.component';\nimport { FormRegisterComponent } from './components/form-register/form-register.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [RegisterComponent, FormRegisterComponent],\n  imports: [CommonModule, RegisterRoutingModule, SharedModule, FormsModule],\n})\nexport class RegisterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormRegisterComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RegisterRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegisterRoutingModule",
            "id": "module-RegisterRoutingModule-7dfced673412aff2885b6fe5eba4d4c3e1492eeaf3f8660fdf745a84ac6097f699c1c6ce52668230c7b1d08c8616f6f9974fb627c316f2b5423f093440c5a2b4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signup/pages/register/register-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SalesModule",
            "id": "module-SalesModule-f993ba815abadbe8f117df696bc5a136723b27bbc397496690469ed3aa379c2f3d890924125aa9efb0aa8bb2cc8f41af9a62a7d7ba010c8f860f90c8dfc01809",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/pages/sales/sales.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SalesRoutingModule } from './sales-routing.module';\nimport { SalesComponent } from './sales.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  declarations: [SalesComponent],\n  imports: [CommonModule, SalesRoutingModule, SharedModule],\n})\nexport class SalesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SalesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SalesRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SalesRoutingModule",
            "id": "module-SalesRoutingModule-47b8a082a29924ad5470ddc7a8fafd5f1d073eaa1f1075c6c6d475410a83d08bfe344c955588a72d799c32270682f8c74dc3f501759c74b06d2ce564a141231d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/pages/sales/sales-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SalesComponent } from './sales.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SalesComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SalesRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-57ac6598978cb96a9391552ba10019b87705c6c68a7cfdcd4a8f44065ed2144ce2615eae97492b4a9c2269b513bd399d23d26285c74b9f09fd2839aeb4cfd605",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { IConfig, NgxMaskModule } from 'ngx-mask';\n\nimport { AsideComponent } from './components/aside/aside.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { InputTextComponent } from './components/inputs/input-text/input-text.component';\nimport { InputPasswordComponent } from './components/inputs/input-password/input-password.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { AvatarComponent } from './components/avatar/avatar.component';\nimport { BadgeComponent } from './components/badge/badge.component';\nimport { ContainerComponent } from './components/container/container.component';\nimport { ListComponent } from './components/list/list.component';\nimport { ListItemComponent } from './components/itens/list-item/list-item.component';\nimport { ErrorMessagePipe } from './pipes/error-message/error-message.pipe';\nimport { ErrorMessageComponent } from './components/error-message/error-message.component';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { GenericTableComponent } from './components/tables/generic-table/generic-table.component';\nimport { GenericItemComponent } from './components/itens/generic-item/generic-item.component';\nimport { GenericItemLoadingComponent } from './components/itens/generic-item-loading/generic-item-loading.component';\nimport { FormSearchComponent } from './components/forms/form-search/form-search.component';\nimport { InputPhotoComponent } from './components/inputs/input-photo/input-photo.component';\nimport { InputCurrencyComponent } from './components/inputs/input-currency/input-currency.component';\nimport { NgxCurrencyModule } from 'ngx-currency';\n\nexport const options: null | Partial<IConfig> | (() => Partial<IConfig>) = null;\n\n@NgModule({\n  declarations: [\n    AsideComponent,\n    ButtonComponent,\n    InputTextComponent,\n    InputPasswordComponent,\n    HeaderComponent,\n    AvatarComponent,\n    BadgeComponent,\n    ContainerComponent,\n    ListComponent,\n    ListItemComponent,\n    ErrorMessagePipe,\n    ErrorMessageComponent,\n    AlertComponent,\n    GenericTableComponent,\n    GenericItemComponent,\n    GenericItemLoadingComponent,\n    FormSearchComponent,\n    InputPhotoComponent,\n    InputCurrencyComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxMaskModule.forRoot(),\n    NgxCurrencyModule,\n  ],\n  exports: [\n    AsideComponent,\n    ButtonComponent,\n    InputTextComponent,\n    InputPasswordComponent,\n    HeaderComponent,\n    AvatarComponent,\n    BadgeComponent,\n    ContainerComponent,\n    ListComponent,\n    ListItemComponent,\n    ErrorMessagePipe,\n    ErrorMessageComponent,\n    AlertComponent,\n    GenericTableComponent,\n    GenericItemComponent,\n    GenericItemLoadingComponent,\n    FormSearchComponent,\n    InputPhotoComponent,\n    InputCurrencyComponent,\n  ],\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlertComponent"
                        },
                        {
                            "name": "AsideComponent"
                        },
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BadgeComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ContainerComponent"
                        },
                        {
                            "name": "ErrorMessageComponent"
                        },
                        {
                            "name": "ErrorMessagePipe"
                        },
                        {
                            "name": "FormSearchComponent"
                        },
                        {
                            "name": "GenericItemComponent"
                        },
                        {
                            "name": "GenericItemLoadingComponent"
                        },
                        {
                            "name": "GenericTableComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "InputCurrencyComponent"
                        },
                        {
                            "name": "InputPasswordComponent"
                        },
                        {
                            "name": "InputPhotoComponent"
                        },
                        {
                            "name": "InputTextComponent"
                        },
                        {
                            "name": "ListComponent"
                        },
                        {
                            "name": "ListItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AlertComponent"
                        },
                        {
                            "name": "AsideComponent"
                        },
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BadgeComponent"
                        },
                        {
                            "name": "ContainerComponent"
                        },
                        {
                            "name": "ErrorMessageComponent"
                        },
                        {
                            "name": "ErrorMessagePipe"
                        },
                        {
                            "name": "FormSearchComponent"
                        },
                        {
                            "name": "GenericItemComponent"
                        },
                        {
                            "name": "GenericItemLoadingComponent"
                        },
                        {
                            "name": "GenericTableComponent"
                        },
                        {
                            "name": "InputCurrencyComponent"
                        },
                        {
                            "name": "InputPasswordComponent"
                        },
                        {
                            "name": "InputPhotoComponent"
                        },
                        {
                            "name": "InputTextComponent"
                        },
                        {
                            "name": "ListComponent"
                        },
                        {
                            "name": "ListItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SigninModule",
            "id": "module-SigninModule-880134dfb07013d1714ef1dfac661c241e10918749c0acf29a111f5ef45067f36867d9ac4d2b70244d53ffb5dcc19a7d0e77dbe2cb7564e4724a04a16f3f5cb4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/signin.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { SigninComponent } from './signin.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { SigninRoutingModule } from './signin-routing.module';\nimport { TokenInterceptor } from '../shared/interceptors/token/token.interceptor';\n\nconst TOKEN_INTERCEPTOR_PROVIDER = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: TokenInterceptor,\n  multi: true,\n};\n\n@NgModule({\n  declarations: [SigninComponent],\n  imports: [CommonModule, SigninRoutingModule, SharedModule],\n  exports: [SigninComponent],\n  providers: [TOKEN_INTERCEPTOR_PROVIDER],\n})\nexport class SigninModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SigninComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SigninRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SigninComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SigninRoutingModule",
            "id": "module-SigninRoutingModule-452830ce6a8d432fcceed7285a85051c3c6d7c58ecefdffe987448e6943329ecd775b1ea3ceba128c1e9b4db2fedbd2a3147b06effb5b6acf620e3775ffa69d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signin/signin-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SigninComponent } from './signin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SigninComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'dashboard',\n      },\n      {\n        path: 'dashboard',\n        loadChildren: () =>\n          \"import('./pages/dashboard/dashboard.module').then(\\\n            (m) => m.DashboardModule,\\\n          )\",\n        data: {\n          title: 'Dashboard',\n        },\n      },\n      {\n        path: 'produtos',\n        loadChildren: () =>\n          \"import('./pages/products/products.module').then(\\\n            (m) => m.ProductsModule,\\\n          )\",\n        data: {\n          title: 'Produtos',\n        },\n      },\n      {\n        path: 'vendas',\n        loadChildren: () =>\n          \"import('./pages/sales/sales.module').then((m) => m.SalesModule)\",\n        data: {\n          title: 'Vendas',\n        },\n      },\n      {\n        path: 'fornecedores',\n        loadChildren: () =>\n          \"import('./pages/provides/provides.module').then(\\\n            (m) => m.ProvidesModule,\\\n          )\",\n        data: {\n          title: 'Fornecedores',\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SigninRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SignupModule",
            "id": "module-SignupModule-b33513e0d78b946d588776e4c842324458e24ce2cdd76fc53ee37ba935a3e3ca62f08789964d6f482e11c8ea17fd77c1b7a9d850ebf843fc4df37500d97141d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signup/signup.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SignupRoutingModule } from './signup-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SignupComponent } from './signup.component';\n\n@NgModule({\n  declarations: [SignupComponent],\n  imports: [CommonModule, SignupRoutingModule, ReactiveFormsModule],\n  exports: [SignupComponent],\n})\nexport class SignupModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SignupComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SignupRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SignupComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SignupRoutingModule",
            "id": "module-SignupRoutingModule-6396f71160a9d3ef939e4c0f8f4d53f906f8672629ecfb5d804b761896ace5f18e44aa2e7bf5d56b3c54dfdffc09960208e411665dd2ced8c51eb2e81ee5f742",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/signup/signup-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SignupComponent } from './signup.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n      },\n      {\n        path: 'login',\n        data: {\n          title: 'Login',\n        },\n        loadChildren: () =>\n          \"import('./pages/login/login.module').then((m) => m.LoginModule)\",\n      },\n      {\n        path: 'register',\n        data: {\n          title: 'Regsiter',\n        },\n        loadChildren: () =>\n          \"import('./pages/register/register.module').then(\\\n            (m) => m.RegisterModule\\\n          )\",\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  app_name: 'Storage Manager',\n  token: '@STORE_MANAGER',\n  urlApi: 'http://localhost:3000/',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  app_name: 'Storage Manager',\n  token: '@STORE_MANAGER',\n  urlApi: 'http://localhost:3000/',\n}"
            },
            {
                "name": "ERROR_INTERCEPTOR_PROVIDER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true,\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "options",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "null | Partial | ",
                "defaultValue": "null"
            },
            {
                "name": "pages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/pages.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PageLink[]",
                "defaultValue": "[\n  {\n    link: 'dashboard',\n    content: 'Dashboard',\n    icon: faChartBar,\n  },\n  {\n    link: 'produtos',\n    content: 'Products',\n    icon: faBoxOpen,\n  },\n  {\n    link: 'fornecedores',\n    content: 'Providers',\n    icon: faPeopleCarry,\n  },\n  {\n    link: 'vendas',\n    content: 'Sales',\n    icon: faPeopleCarry,\n  },\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Alert>",
                "defaultValue": "(args: Alert) => ({\n  props: args,\n})"
            },
            {
                "name": "TOKEN_INTERCEPTOR_PROVIDER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/signin/signin.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  provide: HTTP_INTERCEPTORS,\n  useClass: TokenInterceptor,\n  multi: true,\n}"
            }
        ],
        "functions": [
            {
                "name": "scrollToTop",
                "file": "src/app/shared/utils/scroll-to-top.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "FormErros",
                "childs": [
                    {
                        "name": "required",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Campo obrigatÃ³rio"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/enums/form-erros.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  app_name: 'Storage Manager',\n  token: '@STORE_MANAGER',\n  urlApi: 'http://localhost:3000/',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  app_name: 'Storage Manager',\n  token: '@STORE_MANAGER',\n  urlApi: 'http://localhost:3000/',\n}"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "ERROR_INTERCEPTOR_PROVIDER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true,\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/shared.module.ts": [
                {
                    "name": "options",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | Partial | ",
                    "defaultValue": "null"
                }
            ],
            "src/app/data/pages.ts": [
                {
                    "name": "pages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/pages.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PageLink[]",
                    "defaultValue": "[\n  {\n    link: 'dashboard',\n    content: 'Dashboard',\n    icon: faChartBar,\n  },\n  {\n    link: 'produtos',\n    content: 'Products',\n    icon: faBoxOpen,\n  },\n  {\n    link: 'fornecedores',\n    content: 'Providers',\n    icon: faPeopleCarry,\n  },\n  {\n    link: 'vendas',\n    content: 'Sales',\n    icon: faPeopleCarry,\n  },\n]"
                }
            ],
            "src/app/shared/components/alert/alert.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Alert>",
                    "defaultValue": "(args: Alert) => ({\n  props: args,\n})"
                }
            ],
            "src/app/signin/signin.module.ts": [
                {
                    "name": "TOKEN_INTERCEPTOR_PROVIDER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/signin/signin.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  provide: HTTP_INTERCEPTORS,\n  useClass: TokenInterceptor,\n  multi: true,\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/utils/scroll-to-top.ts": [
                {
                    "name": "scrollToTop",
                    "file": "src/app/shared/utils/scroll-to-top.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/enums/form-erros.ts": [
                {
                    "name": "FormErros",
                    "childs": [
                        {
                            "name": "required",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Campo obrigatÃ³rio"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/enums/form-erros.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "pathMatch": "full",
                        "redirectTo": "signin"
                    },
                    {
                        "path": "signup",
                        "loadChildren": "./signup/signup.module#SignupModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/signup/signup-routing.module.ts",
                                        "module": "SignupRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "SignupComponent",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "redirectTo": "login"
                                                    },
                                                    {
                                                        "path": "login",
                                                        "data": {
                                                            "title": "Login"
                                                        },
                                                        "loadChildren": "./pages/login/login.module#LoginModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/signup/pages/login/login-routing.module.ts",
                                                                        "module": "LoginRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "LoginComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "LoginModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "register",
                                                        "data": {
                                                            "title": "Regsiter"
                                                        },
                                                        "loadChildren": "./pages/register/register.module#RegisterModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/signup/pages/register/register-routing.module.ts",
                                                                        "module": "RegisterRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "RegisterComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "RegisterModule"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "SignupModule"
                            }
                        ]
                    },
                    {
                        "path": "signin",
                        "canActivate": [
                            "LoggedGuard"
                        ],
                        "loadChildren": "./signin/signin.module#SigninModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/signin/signin-routing.module.ts",
                                        "module": "SigninRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "SigninComponent",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "redirectTo": "dashboard"
                                                    },
                                                    {
                                                        "path": "dashboard",
                                                        "loadChildren": "./pages/dashboard/dashboard.module#DashboardModule,",
                                                        "data": {
                                                            "title": "Dashboard"
                                                        }
                                                    },
                                                    {
                                                        "path": "produtos",
                                                        "loadChildren": "./pages/products/products.module#ProductsModule,",
                                                        "data": {
                                                            "title": "Produtos"
                                                        }
                                                    },
                                                    {
                                                        "path": "vendas",
                                                        "loadChildren": "./pages/sales/sales.module#SalesModule",
                                                        "data": {
                                                            "title": "Vendas"
                                                        },
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/signin/pages/sales/sales-routing.module.ts",
                                                                        "module": "SalesRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "SalesComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "SalesModule"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "fornecedores",
                                                        "loadChildren": "./pages/provides/provides.module#ProvidesModule,",
                                                        "data": {
                                                            "title": "Fornecedores"
                                                        }
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "SigninModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ERROR_INTERCEPTOR_PROVIDER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pages.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PageLink",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pages.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AsideComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/container/container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/error-message/error-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/forms/form-search/form-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/input-currency/input-currency.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputCurrencyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/input-password/input-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/input-photo/input-photo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputPhotoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/input-photo/input-photo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputPhotoValue",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/inputs/input-text/input-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/itens/generic-item-loading/generic-item-loading.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenericItemLoadingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/itens/generic-item/generic-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenericItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/itens/list-item/list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tables/generic-table/generic-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenericTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/guards/logged.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "LoggedGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interceptors/error/error.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "ErrorInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interceptors/token/token.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "TokenInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/response-error.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponseError",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/error-message/error-message.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ErrorMessagePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAuthResponse",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILoginParam",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISignupParam",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/base/base.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BaseService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "options",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/scroll-to-top.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "scrollToTop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/components/form-product/form-product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/components/modal-create/modal-create.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalCreateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/components/modal-update/modal-update.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalUpdateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/components/tables-products-header/tables-products-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TablesProductsHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/components/tables-products-item/tables-products-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TablesProductsItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/interfaces/products.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProduct",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/interfaces/products.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProductCreate",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/products.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/products/services/product/product.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/components/form-provides/form-provides.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormProvidesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/components/form-provides/form-provides.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProvidesCreate",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/components/modal-create/modal-create.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalCreateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/components/modal-update/modal-update.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalUpdateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/components/table-provides-header/table-provides-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableProvidesHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/components/table-provides-item/table-provides-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableProvidesItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/interfaces/provider.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IProvider",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/provides.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProvidesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/provides/services/providers/provider.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProviderService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/pages/sales/sales.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SalesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/signin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/signin/signin.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TOKEN_INTERCEPTOR_PROVIDER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/signup/pages/login/components/form-login/form-login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormLoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/signup/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/signup/pages/register/components/form-register/form-register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormRegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/signup/pages/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/signup/signup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}