@use '@angular/material' as mat;
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-typography-config());`
/* TODO(mdc-migration): Remove all-legacy-component-typographies once all legacy components are migrated*/
@include mat.all-legacy-component-typographies();
@include mat.all-component-typographies();
/* TODO(mdc-migration): Remove legacy-core once all legacy components are migrated*/
@include mat.legacy-core();
@include mat.core();

$front-primary: mat.define-palette(mat.$indigo-palette);
$front-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$front-warn: mat.define-palette(mat.$red-palette);

$front-theme: mat.define-light-theme(
  (
    color: (
      primary: $front-primary,
      accent: $front-accent,
      warn: $front-warn,
    ),
  )
);

/* TODO(mdc-migration): Remove all-legacy-component-themes once all legacy components are migrated*/
@include mat.all-legacy-component-themes($front-theme);

@include mat.all-component-themes($front-theme);

:root {
  //colors
  --text: #252733;
  --gray: #dfe0eb;
  --text-light: #4b506d;
  --primary: #3751ff;
  --light: #fcfdfe;
  --white: #fff;
  --success: #38A169;
  --error: #E53E3E;
  --green: #29cc97;
  --red: #f12b2c;
  --info: #3182ce;
  --red-medium: #ff222291;
  --yellow: #fec400;
  --gray-dark: #9fa2b4;
  --background: #363740;
  --background-light: #f7f8fc;
  --background-very-light: #dde2ff;

  --transition: 0.2s ease-in-out all;

  --font-family: Mulish;

  --border: 1px solid var(--gray);

  --space-xxs: 4px;
  --space-xs: 6px;
  --space-sm: 14px;
  --space-md: 24px;
  --space-xmd: 32px;
  --space-lg: 40px;

  --mobile: 360px;
  --tablet: 768px;
  --desktop: 1024px;
}

* {
  box-sizing: border-box;
}

html,
body {
  font-family: var(--font-family);
  margin: 0;
  min-height: 100vh;
  padding: 0;
}

button {
  border: none;
  cursor: pointer;
  outline: none;
}

a {
  text-decoration: none;

  &:focus,
  &:hover {
    text-decoration: underline;
  }
}

table {
  border-collapse: collapse;

  tr:nth-child(even) {
    background-color: var(--light);
    background-color: rgba(55, 81, 255, 0.06);
}
}

ul,
ol {
  padding: 0;
  list-style: none;
  margin: 0;
}

button {
  cursor: pointer;
  border: none;
  background-color: transparent;
}

app-dashboard {
  display: flex;
  flex: 1;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

.content {
  background: var(--white);
  border: var(--border);
  border-radius: 8px;
  box-sizing: border-box;
  padding: 24px 32px;
  width: 100%;
}

th {
  border-bottom: var(--border);
  color: #9fa2b4;
  font-size: 14px;
  font-weight: bold;
  letter-spacing: 0.2px;
  line-height: 18px;
  padding: 0 32px 12px;
}


tbody tr:hover {
  background-color: rgba(55, 81, 255, 0.06);
}

tr {
  cursor: pointer;
  padding: 24px 32px;
  text-align: center;
  transition: var(--transition);

  app-avatar {
    display: block;
    margin-right: var(--space-md);
  }

  &_description {
    color: var(--text);
    font-size: 14px;
    font-weight: 600;
    letter-spacing: 0.2px;
    line-height: 20px;

    small {
      color: #c5c7cd;
      display: block;
      font-size: 12px;
      font-weight: normal;
      letter-spacing: 0.1px;
      line-height: 16px;
      margin-top: var(--space-xxs);
    }
  }
}

.mat-mdc-dialog-container {
  overflow: visible !important;
}

.container_image {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  padding: 8px;
}


app-user {
  height: 100%;
}

.loading-bar {
  background-color: var(--gray-dark);
  box-shadow: 0 4px 10px 0 rgba(33, 33, 33, 0.15);
  border-radius: 4px;
  height: 24px;
  max-width: 100%;
  position: relative;
  overflow: hidden;
  width: 150px;
  margin: 12px auto;

  &::before {
    content: '';
    display: block;
    position: absolute;
    left: -150px;
    top: 0;
    height: 100%;
    width: 150px;
    background: linear-gradient(
      to right,
      transparent 0%,
      #e8e8e8 50%,
      transparent 100%
    );
    animation: load 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  }

  &.lg {
    width: 400px;
  }

  &.sm {
    width: 60px;
  }
}

@keyframes load {
  from {
    left: -150px;
  }
  to {
    left: 100%;
  }
}
